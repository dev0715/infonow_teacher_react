{"version":3,"sources":["pages/lessons/topic-lessons.js","@core/components/ui-loader/index.js","components/date-time.js","assets/images/illustrations sync /^/.//.*$","assets/images/illustrations/no-network.png","assets/images/illustrations/not-found.png","assets/images/illustrations/upcoming-meeting-dark.svg","assets/images/illustrations/upcoming-meeting.svg","components/not-found.js","components/no-network.js","utility/toast.js"],"names":["withRouter","connect","state","_state$Lessons","Lessons","topics","topicsLoading","topicsError","lessons","lessonsLoading","lessonsError","selectedTopic","selectedLesson","oneLessonLoading","oneLessonError","students","studentsError","studentsLoading","studentsLessonAssignLoading","studentsLessonAssignError","studentsLessonUnassignLoading","studentsLessonUnassignError","getTeacherTopicLessons","getTeacherTopics","selectTopic","selectLesson","getLesson","getStudentsForLesson","assignLessonToStudents","unassignLessonToStudents","props","lessonRef","React","createRef","lessonContentRef","_useState","useState","_useState2","Object","_Users_efsolpc1_Projects_infonow_teacher_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","isFullScreen","setFullScreen","_useState3","_useState4","isOpen","setIsOpen","_useState5","_useState6","isOpenLessons","setIsOpenLessons","_useState7","_useState8","isAssignModelOpen","setIsAssignModelOpen","_useState9","_useState10","isRevoking","setIsRevoking","_useState11","_useState12","query","setQuery","_useState13","_useState14","studentIdsAccessRequest","setStudentIdsAccessRequest","_useState15","_useState16","studentIdsAccessRemove","setStudentIdsAccessRemove","toggleLessons","toggle","useEffect","history","goBack","notifyError","notifySuccess","lesson","find","l","id","isFull","length","getStudentsWithoutLesson","filteredStudents","forEach","s","exist","studentLessons","sl","user","userId","infonowUser","infonowUserUuid","push","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","Fragment","react__WEBPACK_IMPORTED_MODULE_2__","_core_components_ui_loader__WEBPACK_IMPORTED_MODULE_36__","blocking","reactstrap__WEBPACK_IMPORTED_MODULE_4__","className","reactstrap__WEBPACK_IMPORTED_MODULE_7__","_components_no_network__WEBPACK_IMPORTED_MODULE_40__","title","message","reactstrap__WEBPACK_IMPORTED_MODULE_9__","reactstrap__WEBPACK_IMPORTED_MODULE_10__","lg","sm","md","react_feather__WEBPACK_IMPORTED_MODULE_34__","width","height","onClick","reactstrap__WEBPACK_IMPORTED_MODULE_19__","expand","react_feather__WEBPACK_IMPORTED_MODULE_32__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","navbar","reactstrap__WEBPACK_IMPORTED_MODULE_5__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","Ripple","color","react_feather__WEBPACK_IMPORTED_MODULE_35__","size","t","react_feather__WEBPACK_IMPORTED_MODULE_33__","_components_not_found__WEBPACK_IMPORTED_MODULE_39__","map","index","key","concat","reactstrap__WEBPACK_IMPORTED_MODULE_6__","ref","videoUrl","src","frameBorder","allow","allowFullScreen","content","markdown","String","replaceAll","setTimeout","fun","current","render","react_markdown__WEBPACK_IMPORTED_MODULE_26___default","window","scrollTo","renderLesson","react_feather__WEBPACK_IMPORTED_MODULE_29__","react_feather__WEBPACK_IMPORTED_MODULE_30__","reactstrap__WEBPACK_IMPORTED_MODULE_11__","reactstrap__WEBPACK_IMPORTED_MODULE_12__","placeholder","value","onChange","e","target","reactstrap__WEBPACK_IMPORTED_MODULE_13__","addonType","reactstrap__WEBPACK_IMPORTED_MODULE_14__","react_feather__WEBPACK_IMPORTED_MODULE_31__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","responsive","list","name","toLowerCase","includes","getFilterStudents","reactstrap__WEBPACK_IMPORTED_MODULE_17__","type","inline","i","filter","_Users_efsolpc1_Projects_infonow_teacher_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","toggleFromRemoveAccessList","_components_avatar__WEBPACK_IMPORTED_MODULE_28__","img","GET_IMAGE_URL","profilePicture","imgHeight","imgWidth","isCompleted","reactstrap__WEBPACK_IMPORTED_MODULE_18__","pill","_components_date_time__WEBPACK_IMPORTED_MODULE_38__","dateTime","created_at","lessonId","studentIds","activeLesson","reactstrap__WEBPACK_IMPORTED_MODULE_20__","reactstrap__WEBPACK_IMPORTED_MODULE_21__","toggleFromGrantAccessList","UILoader","_classnames","children","loader","tag","overlayColor","Tag","react__WEBPACK_IMPORTED_MODULE_1___default","classnames","_Users_efsolpc1_Projects_infonow_teacher_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","assign","style","backgroundColor","defaultProps","reactstrap__WEBPACK_IMPORTED_MODULE_3__","__webpack_require__","d","__webpack_exports__","DateTime","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","moment__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_1___default","prop_types__WEBPACK_IMPORTED_MODULE_2__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","format","moment","utc","local","invalidValueText","propTypes","PropTypes","string","./no-network.png","./not-found.png","./upcoming-meeting-dark.svg","./upcoming-meeting.svg","webpackContext","req","webpackContextResolve","Error","code","keys","resolve","module","exports","p","NotFound","_useSkin","useSkin","_useSkin2","_Users_efsolpc1_Projects_infonow_teacher_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","source","require","NoNetwork","react_feather__WEBPACK_IMPORTED_MODULE_1__","_components_avatar__WEBPACK_IMPORTED_MODULE_2__","react_toastify__WEBPACK_IMPORTED_MODULE_3__","moment__WEBPACK_IMPORTED_MODULE_4__","moment__WEBPACK_IMPORTED_MODULE_4___default","notifyAlert","hideProgress","toast","icon","role","aria-label","hideProgressBar","notify","arguments","undefined"],"mappings":"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","file":"static/js/31.653deb8a.chunk.js","sourcesContent":["import React from 'react';\n// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport {\n    Card, CardBody, Row, Col,\n    Collapse,\n    Navbar,\n    Button,\n    CardTitle,\n    CardHeader,\n    InputGroup, InputGroupAddon, Input, InputGroupText,\n    Table, Badge, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle,\n    Modal, ModalBody, CustomInput\n} from 'reactstrap'\n\n// ** Store & Actions\nimport { connect, useSelector } from 'react-redux'\nimport {\n    getTeacherTopicLessons,\n    getTeacherTopics,\n    selectTopic,\n    selectLesson,\n    getLesson,\n    getStudentsForLesson,\n    assignLessonToStudents,\n    unassignLessonToStudents\n} from './store/actions'\n\nimport { withRouter } from 'react-router';\nimport './style.scss'\nimport ReactMarkdown from 'react-markdown'\nimport { render } from 'react-dom'\n\nimport Avatar from '@components/avatar'\n\nimport { PlayCircle, Menu, X, ChevronUp, ChevronDown, Plus, Search, MoreVertical, Minus, CheckCircle, Circle, ArrowLeft } from 'react-feather'\n\nimport UILoader from '../../@core/components/ui-loader';\n\nimport { GET_IMAGE_URL } from '../../helpers/url_helper';\n\nimport { DateTime } from '../../components/date-time';\n\nimport NotFound from '../../components/not-found';\nimport NoNetwork from '../../components/no-network';\n\nimport { notifyError, notifySuccess } from '../../utility/toast'\n\n\nconst AppLessons = (props) => {\n\n    const lessonRef = React.createRef()\n    const lessonContentRef = React.createRef()\n    const [isFullScreen, setFullScreen] = useState(false)\n    const [isOpen, setIsOpen] = useState(false);\n    const [isOpenLessons, setIsOpenLessons] = useState(false);\n    const [isAssignModelOpen, setIsAssignModelOpen] = useState(false)\n    const [isRevoking, setIsRevoking] = useState(false)\n    const [query, setQuery] = useState(\"\")\n    const [studentIdsAccessRequest, setStudentIdsAccessRequest] = useState([])\n    const [studentIdsAccessRemove, setStudentIdsAccessRemove] = useState([])\n\n    const toggleLessons = () => setIsOpenLessons(!isOpenLessons);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n\n    useEffect(() => {\n        if (props.selectedTopic) {\n            props.getTeacherTopicLessons(props.selectedTopic)\n            props.getStudentsForLesson()\n            setIsOpenLessons(false)\n        } else {\n            props.history.goBack()\n        }\n    }, [props.selectedTopic])\n\n    useEffect(() => {\n        if (isAssignModelOpen && !props.studentsLessonAssignLoading && !props.studentsLessonAssignError) {\n            setIsAssignModelOpen(false)\n            setStudentIdsAccessRequest([])\n            notifySuccess(\"Lesson Access\", \"Lesson access granted successfully\")\n        }\n        else if (isAssignModelOpen && !props.studentsLessonAssignLoading && props.studentsLessonAssignError) {\n            notifyError(\"Lesson Access\", props.studentsLessonAssignError)\n        }\n    }, [props.studentsLessonAssignLoading])\n\n    useEffect(() => {\n        if (isRevoking && !props.studentsLessonUnassignLoading && !props.studentsLessonUnassignError) {\n            setIsRevoking(false)\n            setStudentIdsAccessRemove([])\n            notifySuccess(\"Lesson Access\", \"Lesson access revoked successfully\")\n        }\n        else if (isRevoking && !props.studentsLessonUnassignLoading && props.studentsLessonUnassignError) {\n            notifyError(\"Lesson Access\", props.studentsLessonUnassignError)\n        }\n    }, [props.studentsLessonUnassignLoading])\n\n    useEffect(() => {\n        setStudentIdsAccessRequest([])\n        setStudentIdsAccessRemove([])\n        setIsOpenLessons(false)\n        if (props.selectedLesson) {\n            let lesson = props.lessons.find(l => l.id == props.selectedLesson)\n            if (lesson && !lesson.isFull) {\n                props.getLesson(props.selectedLesson)\n            }\n        }\n    }, [props.selectedLesson])\n\n\n    useEffect(() => {\n        if (props.lessons.length > 0 && !props.selectedLesson) {\n            props.selectLesson(props.lessons[0].id)\n        }\n        else if (props.lessons.length > 0 && props.selectedLesson) {\n            props.getLesson(props.selectedLesson)\n        }\n    }, [props.lessons])\n\n    const toggleFromGrantAccessList = (id) => {\n        if (studentIdsAccessRequest.find(i => i == id))\n            return setStudentIdsAccessRequest(studentIdsAccessRequest.filter(i => i != id))\n        setStudentIdsAccessRequest([...studentIdsAccessRequest, id])\n    }\n\n    const toggleFromRemoveAccessList = (id) => {\n        if (studentIdsAccessRemove.find(i => i == id))\n            return setStudentIdsAccessRemove(studentIdsAccessRemove.filter(i => i != id))\n        setStudentIdsAccessRemove([...studentIdsAccessRemove, id])\n    }\n\n    const assignLesson = () => {\n        props.assignLessonToStudents({\n            lessonId: props.selectedLesson,\n            studentIds: studentIdsAccessRequest\n        })\n    }\n\n    const getFilterStudents = (list) => {\n        if (!query) return list;\n        let students = [];\n        list.forEach(s => {\n            if (s.infonowUser.name.toLowerCase().includes(query.toLowerCase()))\n                students.push(s);\n        });\n        return students\n    }\n\n    const getStudentsWithoutLesson = () => {\n        let lesson = props.lessons.find(l => l.id == props.selectedLesson)\n        if (!lesson) return []\n        if (!lesson.isFull) return []\n        let filteredStudents = [];\n        props.students.forEach(s => {\n            let exist = false;\n            lesson.studentLessons.forEach(sl => {\n                if (s.user.userId == sl.infonowUser.infonowUserUuid) {\n                    exist = true\n                }\n            })\n            if (!exist)\n                filteredStudents.push(s)\n        })\n        return filteredStudents;\n    }\n\n    const renderLesson = (content) => {\n        if (content) {\n            let uploadPath = \"http://192.168.10.102:1337/uploads/\";\n            let markdown = String(content).replaceAll(\"/uploads/\", uploadPath);\n            let fun = () => {\n                if (lessonContentRef.current) {\n                    render(<ReactMarkdown>{markdown}</ReactMarkdown>, lessonContentRef.current)\n                    window.scrollTo(0, 0)\n                    lessonRef.current.scrollTo(0, 0)\n                } else {\n                    setTimeout(fun, 100)\n                }\n            }\n            setTimeout(fun, 200)\n        }\n    }\n\n    const revokeAccess = () => {\n        setIsRevoking(true)\n        props.unassignLessonToStudents({\n            lessonId: props.selectedLesson,\n            studentIds: studentIdsAccessRemove\n        })\n    }\n\n    const activeLesson = () => {\n\n        let lesson = props.lessons.find(l => l.id == props.selectedLesson)\n        if (!lesson) return\n        return <UILoader blocking={props.oneLessonLoading}>\n            {\n                lesson &&\n                <Card\n                    className={`active-lesson-container ${isOpenLessons ? 'hide' : ''} ${isFullScreen ? 'active' : ''}`}\n                >\n                    <CardHeader>\n                        <CardTitle>{lesson.title}</CardTitle>\n                    </CardHeader>\n                    <CardBody>\n                        <div\n                            ref={lessonRef}\n                            className=\"active-lesson\"\n                        >\n                            {\n                                lesson.videoUrl &&\n                                <div className=\"lesson-video mt-2\">\n                                    <iframe\n                                        src={lesson.videoUrl}\n                                        title=\"YouTube video player\"\n                                        frameBorder=\"0\"\n                                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                                        allowFullScreen\n                                    >\n                                    </iframe>\n                                </div>\n                            }\n                            <div\n                                ref={lessonContentRef}\n                                id=\"active-lesson-content\"\n                                className={lesson.videoUrl ? \"mt-4\" : \"\"}\n                            >\n                                {props.oneLessonError &&\n                                    <NoNetwork />\n                                }\n                            </div>\n                            {\n                                lesson.content &&\n                                renderLesson(lesson.content)\n                            }\n                        </div>\n                    </CardBody>\n                </Card>\n            }\n            {\n                lesson.studentLessons &&\n                <div className={`students ${isOpenLessons ? 'active' : 'm-2'}`}>\n                    <div className=\"heading\" onClick={toggleLessons}>\n                        <h4>\n                            Students\n                        </h4>\n                        <div>\n                            {\n                                isOpenLessons\n                                    ? <ChevronDown size={20} />\n                                    : <ChevronUp size={20} />\n                            }\n                        </div>\n                    </div>\n                    {\n                        isOpenLessons &&\n                        <Collapse isOpen={isOpenLessons}>\n                            <div className=\"student-list\">\n                                <Row>\n                                    <Col sm='12' md='7' lg='8'>\n                                        <InputGroup className='input-group-merge'>\n                                            <Input placeholder='Search here' value={query} onChange={e => setQuery(e.target.value)} />\n                                            <InputGroupAddon addonType='append'>\n                                                <InputGroupText>\n                                                    {\n                                                        !query &&\n                                                        <Search size={14} />\n                                                    }\n                                                    {\n                                                        query &&\n                                                        <X size={14} onClick={() => setQuery(\"\")} />\n                                                    }\n                                                </InputGroupText>\n                                            </InputGroupAddon>\n                                        </InputGroup>\n                                    </Col>\n                                    <Col sm='12' md='5' lg='4'>\n                                        <div className=\"text-right mt-1 mt-md-0\">\n                                            <Button.Ripple\n                                                color='primary'\n                                                onClick={() => setIsAssignModelOpen(true)}\n                                            >\n                                                <Plus size={14} />\n                                                &nbsp;\n                                                Grant Access\n                                            </Button.Ripple>\n                                        </div>\n                                    </Col>\n                                </Row>\n                                {\n                                    lesson.studentLessons.length == 0 &&\n                                    <NotFound message=\"This Lesson is not Assigned to any student\" />\n                                }\n                                {\n                                    lesson.studentLessons.length > 0 &&\n                                    <Table key=\"lesson-student-table\" className=\"mt-2\" responsive>\n                                        <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Student</th>\n                                                <th>Progress</th>\n                                                <th>Date</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                getFilterStudents(lesson.studentLessons).map((s, index) =>\n                                                    <tr key={\"filter-student\" + index}>\n                                                        <td>\n                                                            <CustomInput\n                                                                type='checkbox'\n                                                                className='custom-control-Primary'\n                                                                id={'filter-student' + index}\n                                                                inline\n                                                                onClick={() => toggleFromRemoveAccessList(s.infonowUser.infonowUserUuid)}\n                                                            />\n                                                        </td>\n                                                        <td>\n                                                            <Avatar\n                                                                className='box-shadow-1 avatar-border'\n                                                                size='sm'\n                                                                img={GET_IMAGE_URL(s.infonowUser.profilePicture)}\n                                                                imgHeight='70'\n                                                                imgWidth='70'\n                                                            />\n                                                            &nbsp;&nbsp;\n                                                            <span>{s.infonowUser.name}</span>\n                                                        </td>\n                                                        <td>\n                                                            {\n                                                                s.isCompleted ?\n                                                                    <Badge pill color='light-success' className='mr-1'>\n                                                                        Completed\n                                                                    </Badge> : <Badge pill color='light-warning' className='mr-1'>\n                                                                        InComplete\n                                                                    </Badge>\n                                                            }\n                                                        </td>\n                                                        <td>\n                                                            <DateTime dateTime={s.created_at} />\n                                                        </td>\n                                                    </tr>\n                                                )\n                                            }\n                                        </tbody>\n                                    </Table>\n                                }\n                                {\n                                    studentIdsAccessRemove.length > 0 &&\n                                    <div className=\"mt-2\">\n                                        <Button.Ripple\n                                            color='primary'\n                                            onClick={() => revokeAccess()}\n                                        >\n                                            Revoke Access\n                                        </Button.Ripple>\n                                    </div>\n                                }\n                            </div>\n                        </Collapse>\n                    }\n                </div>\n            }\n        </UILoader>\n    }\n\n    return <>\n        {\n            props.selectedTopic && <Fragment>\n                <UILoader blocking={props.lessonsLoading || props.studentsLessonUnassignLoading} >\n                    <Card className=\"full-height\">\n                        <CardBody className=\"p-0\">\n                            {\n                                !props.lessonsLoading &&\n                                props.lessonsError &&\n                                <NoNetwork\n                                    title={\"Error\"}\n                                    message={props.lessonsError}\n                                />\n                            }\n                            {\n                                !props.lessonsLoading &&\n                                !props.lessonsError &&\n                                <Row >\n                                    {\n                                        !isFullScreen &&\n                                        <Col lg={3} sm='12' md='12'\n                                            className={`pr-lg-0 topic-list-shadow`}\n                                        >\n                                            {\n                                                isFullScreen ?\n                                                    <Menu\n                                                        className=\"ml-2 mt-2\"\n                                                        width={20}\n                                                        height={20}\n                                                        onClick={() => setFullScreen(false)}\n                                                    />\n                                                    :\n                                                    <Navbar expand=\"lg\" className=\"p-0\">\n                                                        {\n                                                            !isOpen &&\n                                                            <Menu\n                                                                className=\"m-2 d-md-block d-lg-none\"\n                                                                width={20}\n                                                                height={20}\n                                                                onClick={toggle}\n                                                            />\n                                                        }\n                                                        {\n                                                            isOpen &&\n                                                            <X\n                                                                className=\"m-2 d-md-block d-lg-none\"\n                                                                width={20}\n                                                                height={20}\n                                                                onClick={toggle}\n                                                            />\n                                                        }\n                                                        <Collapse isOpen={isOpen || isFullScreen} navbar>\n                                                            <Card className='full-width'>\n                                                                <CardHeader>\n                                                                    <div className=\"d-flex align-items-center mb-1\">\n                                                                        <div className=\"d-none d-lg-inline d-xl-inline\">\n                                                                            <Button.Ripple\n                                                                                className='btn-block btn-icon'\n                                                                                color='flat-primary'\n                                                                                onClick={() => {\n                                                                                    props.history.goBack()\n                                                                                }}\n                                                                            >\n                                                                                <ArrowLeft size={14} />\n                                                                            </Button.Ripple>\n                                                                        </div>\n                                                                        <h6 className=\"ml-25 mb-0\">\n                                                                            {\n                                                                                props.topics.find(t => t.id == props.selectedTopic).title\n                                                                            }\n                                                                        </h6>\n                                                                    </div>\n                                                                    <div className=\"d-flex w-100 align-items-center justify-content-between\">\n                                                                        <h4 className=\"text-primary ml-25 mb-0\">\n                                                                            Lessons\n                                                                        </h4>\n                                                                        <div >\n                                                                            <Button.Ripple\n                                                                                className='btn-block btn-icon'\n                                                                                color='primary'\n                                                                                onClick={() => {\n                                                                                    props.history.push('/new-lesson')\n                                                                                }}\n                                                                            >\n                                                                                <Plus size={14} />\n                                                                            </Button.Ripple>\n                                                                        </div>\n                                                                    </div>\n                                                                </CardHeader>\n                                                                <CardBody className=\"p-0\">\n                                                                    {\n                                                                        props.lessons.length == 0 &&\n                                                                        !props.lessonsLoading &&\n                                                                        !props.lessonsError &&\n                                                                        <NotFound message=\"Add new Lesson\" width={100} height={100} />\n                                                                    }\n                                                                    {\n                                                                        props.lessons.length > 0 &&\n                                                                        <div className=\"lesson-list\">\n                                                                            {\n                                                                                props.lessons.map((l, index) =>\n                                                                                    <div\n                                                                                        key={'lesson-key-' + index}\n                                                                                        className={`lesson-container ${l.id == props.selectedLesson ? 'active' : \"\"}`}\n                                                                                        onClick={() => {\n                                                                                            props.selectLesson(l.id)\n                                                                                            if (isOpen)\n                                                                                                setIsOpen(false)\n                                                                                        }}\n                                                                                    >\n                                                                                        <div className=\"lesson-content\">\n                                                                                            {l.title}\n                                                                                        </div>\n                                                                                    </div>\n                                                                                )\n                                                                            }\n                                                                        </div>\n                                                                    }\n                                                                </CardBody>\n                                                            </Card>\n                                                        </Collapse>\n                                                    </Navbar>\n                                            }\n                                        </Col>\n                                    }\n                                    <Col lg='9' md='12' sm='12'>\n                                        {\n                                            activeLesson()\n                                        }\n                                    </Col>\n                                </Row>\n                            }\n                        </CardBody>\n                    </Card>\n                </UILoader>\n                <Modal\n                    isOpen={isAssignModelOpen}\n                    className='modal-dialog-centered'\n                >\n                    <UILoader\n                        blocking={props.studentsLessonAssignLoading}\n                        className=\"model-loader\"\n                    >\n                        <ModalBody className=\"pb-1\">\n                            <div className=\"text-right\">\n                                <X\n                                    size={16}\n                                    onClick={() => {\n                                        setIsAssignModelOpen(false)\n                                        setStudentIdsAccessRequest([])\n                                    }}\n                                />\n                            </div>\n                            <h4>\n                                Select a student\n                            </h4>\n                            {\n                                getStudentsWithoutLesson().length == 0 &&\n                                <NotFound message=\"No Student Left\" />\n                            }\n                            <Row className=\"mt-1\">\n                                {\n                                    getStudentsWithoutLesson().map((s, index) =>\n                                        <Col\n                                            key={\"lesson-assign-\" + index}\n                                            lg='12'\n                                            className=\"mb-25 p-1 student-bottom-border\"\n                                        >\n                                            <div className=\"d-flex justify-content-between align-items-center\">\n                                                <div>\n                                                    <Avatar\n                                                        className='box-shadow-1 avatar-border'\n                                                        size='sm'\n                                                        img={GET_IMAGE_URL(s.user.profilePicture)}\n                                                    />\n                                                    &nbsp;&nbsp;\n                                                    <span>{s.user.name}</span>\n                                                </div>\n                                                <CustomInput\n                                                    type='checkbox'\n                                                    className='custom-control-Primary'\n                                                    id={\"lesson-assign-\" + index}\n                                                    inline\n                                                    onClick={() => toggleFromGrantAccessList(s.user.userId)}\n                                                />\n                                            </div>\n                                        </Col>\n                                    )\n                                }\n                            </Row>\n                            {\n                                studentIdsAccessRequest.length > 0 &&\n                                <div className=\"text-right\">\n                                    <Button.Ripple\n                                        color='primary'\n                                        className=\"mt-2\"\n                                        onClick={() => assignLesson()}\n                                    >\n                                        Apply\n                                    </Button.Ripple>\n                                </div>\n                            }\n                        </ModalBody>\n                    </UILoader>\n                </Modal >\n            </Fragment >\n        }\n    </>\n}\n\nconst mapStateToProps = (state) => {\n\n    const {\n        topics,\n        topicsLoading,\n        topicsError,\n        lessons,\n        lessonsLoading,\n        lessonsError,\n        selectedTopic,\n        selectedLesson,\n        oneLessonLoading,\n        oneLessonError,\n        students,\n        studentsError,\n        studentsLoading,\n        studentsLessonAssignLoading,\n        studentsLessonAssignError,\n        studentsLessonUnassignLoading,\n        studentsLessonUnassignError\n\n    } = state.Lessons;\n    return {\n        topics,\n        topicsLoading,\n        topicsError,\n        lessons,\n        lessonsLoading,\n        lessonsError,\n        selectedTopic,\n        selectedLesson,\n        oneLessonLoading,\n        oneLessonError,\n        students,\n        studentsError,\n        studentsLoading,\n        studentsLessonAssignLoading,\n        studentsLessonAssignError,\n        studentsLessonUnassignLoading,\n        studentsLessonUnassignError\n    }\n}\n\nexport default withRouter(\n    connect(mapStateToProps, {\n        getTeacherTopicLessons, getTeacherTopics,\n        selectTopic, selectLesson, getLesson,\n        getStudentsForLesson, assignLessonToStudents,\n        unassignLessonToStudents\n    })(AppLessons)\n)\n","\nimport React from 'react';\n\n// ** Third Party Components\nimport { Fragment } from 'react'\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Spinner } from 'reactstrap'\n\nimport './ui-loader.scss'\n\nconst UILoader = props => {\n  const { children, blocking, loader, className, tag, overlayColor } = props\n\n  const Tag = tag\n\n  return (\n    <Tag className={classnames('ui-loader', { [className]: className, show: blocking })}>\n      {children}\n      {blocking ? (\n        <Fragment>\n          <div\n            className='overlay' /*eslint-disable */\n            {...(blocking && overlayColor ? { style: { backgroundColor: overlayColor } } : {})}\n          /*eslint-enable */\n          ></div>\n          <div className='loader'>{loader}</div>\n        </Fragment>\n      ) : null}\n    </Tag>\n  )\n}\n\nexport default UILoader\n\nUILoader.defaultProps = {\n  tag: 'div',\n  blocking: false,\n  loader: <Spinner color='primary' />\n}\n\nUILoader.propTypes = {\n  tag: Proptypes.string,\n  loader: Proptypes.any,\n  className: Proptypes.string,\n  overlayColor: Proptypes.string,\n  blocking: Proptypes.bool.isRequired\n}\n","import React from 'react'\nimport moment from 'moment';\nimport PropTypes from 'prop-types'\nconst DATE_TIME_FORMAT = 'DD/MM/yyyy hh:mmA'\nconst DATE_FORMAT = 'DD/MM/yyyy'\nconst TIME_FORMAT = 'hh:mmA'\n\nexport const DateTime = (props) => {\n    let format = DATE_TIME_FORMAT;\n\n    if (props.type) {\n        if (props.type === 'date') format = DATE_FORMAT\n        if (props.type === 'time') format = TIME_FORMAT\n    }\n\n    return (\n        <>\n            {props.dateTime ? moment.utc(props.dateTime).local().format(props.format || format) : props.invalidValueText}\n        </>\n    )\n}\n\nexport const DateTimeFunction = (dateTime, format = DATE_TIME_FORMAT) => {\n    return moment.utc(dateTime).local().format(format)\n}\n\nDateTime.propTypes = {\n    dateTime: PropTypes.string,\n    invalidValueText: PropTypes.string\n}","var map = {\n\t\"./no-network.png\": 241,\n\t\"./not-found.png\": 242,\n\t\"./upcoming-meeting-dark.svg\": 243,\n\t\"./upcoming-meeting.svg\": 244\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 202;","module.exports = __webpack_public_path__ + \"static/media/no-network.dfb8ec30.png\";","module.exports = __webpack_public_path__ + \"static/media/not-found.8a74951b.png\";","module.exports = __webpack_public_path__ + \"static/media/upcoming-meeting-dark.322f4bf9.svg\";","module.exports = __webpack_public_path__ + \"static/media/upcoming-meeting.0a043dcb.svg\";","import React from 'react'\nimport { useSkin } from '@hooks/useSkin'\nconst NotFound = (props) => {\n\n    const [skin, setSkin] = useSkin();\n\n    const illustration = skin === 'dark' ? 'not-found.png' : 'not-found.png',\n        source = require(`@src/assets/images/illustrations/${illustration}`);\n\n    return (\n        <div className=\"text-center pt-2 pb-2\">\n            <h6>\n                {\n                    props.title\n                }\n            </h6>\n            <img\n                className=\"mt-25\"\n                src={source}\n                style={{\n                    width: props.width ? props.width : 200,\n                    height: props.height ? props.height : 200\n                }} />\n            <div className=\"mt-25 text-muted\">\n                {\n                    props.message\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default NotFound\n","import React from 'react'\nimport { useSkin } from '@hooks/useSkin'\nfunction NoNetwork(props) {\n\n    const [skin, setSkin] = useSkin();\n\n    const illustration = skin === 'dark' ? 'no-network.png' : 'no-network.png',\n        source = require(`@src/assets/images/illustrations/${illustration}`);\n\n    return (\n        <div className=\"text-center pt-2\">\n            <h6>\n                {\n                    props.title\n                }\n            </h6>\n            <img src={source}\n                className=\"mt-25\"\n                style={{\n                    width: props.width ? props.width : 200,\n                    height: props.height ? props.height : 200\n                }}\n            />\n            <div className=\"mt-25 text-muted\">\n                {\n                    props.message\n                }\n            </div>\n        </div>\n\n    )\n}\n\nexport default NoNetwork\n","import React, { Fragment } from 'react'\n\nimport { Bell, Check, X, AlertTriangle, Info } from 'react-feather'\nimport Avatar from '@components/avatar'\nimport { toast } from 'react-toastify'\nimport moment from 'moment'\n\n\n\nconst notifyAlert = (title, message, hideProgress, color) => toast(\n    <Fragment>\n        <div className='toastify-header'>\n            <div className='title-wrapper mr-1'>\n                <Avatar size='sm' color={color} icon={<Bell size={12} />} />\n                <h6 className={`toast-title text-${color}`} >{title || \"Notification\"}</h6>\n            </div>\n            <small className='text-muted'>{moment().format(\"hh:mm a\")}</small>\n        </div>\n        <div className='toastify-body'>\n            <span role='img' aria-label='toast-text'>\n                {message}\n            </span>\n        </div>\n    </Fragment>,\n    { hideProgressBar: hideProgress }\n)\n\n\n/**\n * \n * @param {'success'| 'info' | 'error' | 'warning'} type \n * @param {string} title \n * @param {string} message \n * @param {boolean} hideProgress \n */\nconst notify = (type, title, message, hideProgress = true) => {\n\n    switch (type) {\n        case \"success\":\n            notifyAlert(title, message, hideProgress, 'success')\n            break;\n        case \"info\":\n            notifyAlert(title, message, hideProgress, 'info')\n            break;\n        case \"error\":\n            notifyAlert(title, message, hideProgress, 'danger')\n            break;\n        case \"warning\":\n            notifyAlert(title, message, hideProgress, 'warning')\n            break;\n        default:\n            notifyAlert(title, message, hideProgress, 'primary')\n    }\n}\n\n/**\n *  \n * @param {string} title \n * @param {string} message \n * @param {boolean} hideProgress \n */\nexport const notifySuccess = (title, message, hideProgress = true) => {\n    notify('success', title, message, hideProgress)\n}\n\n/**\n *  \n * @param {string} title \n * @param {string} message \n * @param {boolean} hideProgress \n */\nexport const notifyInfo = (title, message, hideProgress = true) => {\n    notify('info', title, message, hideProgress)\n}\n\n/**\n *  \n * @param {string} title \n * @param {string} message \n * @param {boolean} hideProgress \n */\nexport const notifyError = (title, message, hideProgress = true) => {\n    notify('error', title, message, hideProgress)\n}\n\n/**\n *  \n * @param {string} title \n * @param {string} message \n * @param {boolean} hideProgress \n */\nexport const notifyWarning = (title, message, hideProgress = true) => {\n    notify('warning', title, message, hideProgress)\n}\n\n/**\n *  \n * @param {string} title \n * @param {string} message \n * @param {boolean} hideProgress \n */\nexport const notifyPrimary = (title, message, hideProgress = true) => {\n    notify('primary', title, message, hideProgress)\n}"],"sourceRoot":""}