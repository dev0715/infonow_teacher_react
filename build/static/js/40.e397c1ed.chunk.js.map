{"version":3,"sources":["pages/documents/table.js","pages/documents/index.js"],"names":["BootstrapCheckbox","forwardRef","_ref","ref","onClick","rest","Object","objectWithoutProperties","react_default","a","createElement","className","assign","type","DataTableWithButtons","props","store","documents","documentLoading","selectedType","uploadUserDocument","updateUserDocumentProgress","deleteUserDocument","getUserDocuments","_useState","useState","_useState2","slicedToArray","data","setData","_useState3","_useState4","currentPage","setCurrentPage","_useState5","_useState6","searchValue","setSearchValue","_useState7","_useState8","filteredData","setFilteredData","useEffect","filter","d","getFileType","fileType","columns","name","selector","sortable","minWidth","cell","row","Fragment","bytes","decimals","arguments","length","undefined","i","r","concat","parseFloat","toFixed","bytesToSize","fileSize","moment","format","allowOverflow","UncontrolledDropdown","DropdownToggle","tag","more_vertical","size","DropdownMenu","right","DropdownItem","href","e","doc","preventDefault","saveAs","GET_DOCUMENT_URL","fileName","downloadDocument","download","text","console","log","input","document","setAttribute","body","appendChild","select","execCommand","removeChild","copyLink","copy","deleteDoc","documentId","trash","id","react","Card","CardHeader","multiple","hidden","onChange","target","files","count","key","hasOwnProperty","file","callback","_ref2","progress","getElementById","value","Button","refresh_ccw","color","click","plus","Row","Col","md","sm","Label","for","Input","bsSize","updatedData","item","startsWith","toLowerCase","includes","index_cjs_default","noHeader","pagination","selectableRows","paginationPerPage","sortIcon","chevron_down","paginationDefaultPage","paginationComponent","_React$createElement","react_paginate_default","previousLabel","nextLabel","forcePage","onPageChange","page","selected","handlePagination","pageCount","breakLabel","pageRangeDisplayed","marginPagesDisplayed","activeClassName","pageClassName","breakClassName","breakLinkClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","defineProperty","selectableRowsComponent","withRouter","connect","state","_state$Documents","Documents","documentsError","documentUploads","getUserDocumentsSuccess","getUserDocumentsFailure","selectUserDocumentsType","addUserDocumentToQueue","cancelUserDocumentUpload","deleteUserDocumentFailure","deleteUserDocumentSuccess","useSelector","categoryTypes","label","icon","icons_layers","file_text","icons_image","film","music","code","archive","CardBody","ui_loader","blocking","lg","react_select_browser_esm","options","defaultValue","find","c","map","table","Progress","min","max","animated","getShortNameForDocument","UncontrolledTooltip","placement"],"mappings":"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","file":"static/js/40.e397c1ed.chunk.js","sourcesContent":["// ** React Imports\nimport React, { Fragment, useState, forwardRef, useEffect } from 'react'\n\n\n\n// ** Third Party Components\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\nimport {\n    ChevronDown, Copy, Plus, Trash,\n    MoreVertical, RefreshCcw, Download\n} from 'react-feather'\nimport {\n    Card,\n    CardHeader,\n    Button,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Input,\n    Label,\n    Row,\n    Col,\n\n} from 'reactstrap'\nimport moment from 'moment'\nimport { getFileType } from '../../utility/Utils'\nimport { GET_DOCUMENT_URL } from '../../helpers/url_helper'\n\n\nimport { saveAs } from 'file-saver';\n\n\n// ** Bootstrap Checkbox Component\nconst BootstrapCheckbox = forwardRef(({ onClick, ...rest }, ref) => (\n    <div className='custom-control custom-checkbox'>\n        <input type='checkbox' className='custom-control-input' ref={ref} {...rest} />\n        <label className='custom-control-label' onClick={onClick} />\n    </div>\n))\n\n\n\nconst DataTableWithButtons = (props) => {\n\n    const { store } = props\n    const { documents, documentLoading, selectedType,\n        uploadUserDocument, updateUserDocumentProgress,\n        deleteUserDocument, getUserDocuments } = store\n\n\n    const [data, setData] = useState([])\n    const [currentPage, setCurrentPage] = useState(0)\n    const [searchValue, setSearchValue] = useState('')\n    const [filteredData, setFilteredData] = useState([])\n\n\n    useEffect(() => {\n        if (selectedType) {\n            setData(documents.filter(d => getFileType(d.fileType) === selectedType))\n        }\n        else {\n            setData(documents)\n        }\n\n\n    }, [selectedType])\n\n    useEffect(() => {\n        setData(documents)\n\n    }, [documents])\n\n    const copyLink = (e, text) => {\n        e.preventDefault()\n        console.log(\"COPY_LINK\", text)\n        let input = document.createElement('input');\n        input.setAttribute('value', text);\n        document.body.appendChild(input);\n        input.select();\n        let result = document.execCommand('copy');\n        document.body.removeChild(input);\n    }\n    const bytesToSize = (bytes, decimals = 2) => {\n        let SIZES = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n        for (var i = 0, r = bytes, b = 1024; r > b; i++) r /= b;\n        return `${parseFloat(r.toFixed(decimals))} ${SIZES[i]}`;\n    }\n\n    const downloadDocument = (e, doc) => {\n        e.preventDefault()\n        saveAs(GET_DOCUMENT_URL(doc.name), doc.fileName)\n    }\n    const columns = [\n        {\n            name: 'File Name',\n            selector: 'fileName',\n            sortable: true,\n            minWidth: '250px'\n        },\n        {\n            name: 'Size',\n            selector: 'fileSize',\n            sortable: false,\n            minWidth: '100px',\n            cell: row => {\n                return (\n                    <>\n                        {\n                            bytesToSize(row.fileSize)\n                        }\n                    </>\n                )\n            }\n        },\n        {\n            name: 'Last Modified',\n            selector: 'updatedAt',\n            sortable: true,\n            minWidth: '250px',\n            cell: row => {\n                return (\n                    <>\n                        {\n                            moment(row).format(\"DD MMM YYYY\")\n                        }</>\n                )\n            }\n        },\n        {\n            name: 'Actions',\n            selector: 'name',\n            allowOverflow: true,\n            cell: row => {\n                return (\n                    <div className='d-flex'>\n                        <UncontrolledDropdown>\n                            <DropdownToggle className='pr-1' tag='span'>\n                                <MoreVertical size={15} />\n                            </DropdownToggle>\n                            <DropdownMenu right>\n                                <DropdownItem tag='a' href='/' className='w-100' onClick={e => downloadDocument(e, row)}>\n                                    <Download size={15} />\n                                    <span className='align-middle ml-50'>Download</span>\n                                </DropdownItem>\n                                <DropdownItem tag='a' href='/' className='w-100' onClick={e => copyLink(e, GET_DOCUMENT_URL(row.name))}>\n                                    <Copy size={15} />\n                                    <span className='align-middle ml-50'>Copy Link</span>\n                                </DropdownItem>\n                                <DropdownItem tag='a' href='/' className='w-100' onClick={e => deleteDoc(e, row.documentId)}>\n                                    <Trash size={15} />\n                                    <span className='align-middle ml-50'>Delete</span>\n                                </DropdownItem>\n                            </DropdownMenu>\n                        </UncontrolledDropdown>\n                    </div>\n                )\n            }\n        }\n    ]\n\n    // ** Function to handle filter\n    const handleFilter = e => {\n        const value = e.target.value\n        let updatedData = []\n        setSearchValue(value)\n\n\n        if (value.length) {\n            updatedData = data.filter(item => {\n                const startsWith =\n                    item.fileName.toLowerCase().startsWith(value.toLowerCase())\n\n\n                const includes =\n                    item.fileName.toLowerCase().includes(value.toLowerCase())\n\n                if (startsWith) {\n                    return startsWith\n                } else if (!startsWith && includes) {\n                    return includes\n                } else return null\n            })\n            setFilteredData(updatedData)\n            setSearchValue(value)\n        }\n    }\n\n    const onFileSelectChange = (e) => {\n        console.log(\"FILES\", e.target.files)\n        let count = 0;\n        for (let key in e.target.files) {\n            if (e.target.files.hasOwnProperty(key)) {\n                uploadUserDocument({\n                    file: e.target.files[key],\n                    callback: ({ progress, documentId }) => updateUserDocumentProgress({ progress, documentId })\n                })\n                if (count == 5) {\n                    break;\n                }\n                count++\n            }\n        }\n        document.getElementById('attach-user-doc').value = null;\n    }\n\n    // ** Function to handle Pagination\n    const handlePagination = page => {\n        setCurrentPage(page.selected)\n    }\n\n    // ** Custom Pagination\n    const CustomPagination = () => (\n        <ReactPaginate\n            previousLabel=''\n            nextLabel=''\n            forcePage={currentPage}\n            onPageChange={page => handlePagination(page)}\n            pageCount={searchValue.length ?\n                (filteredData.length > 0 ? filteredData.length / 6 : 1)\n                : (data.length > 0 ? data.length / 6 : 1)\n            }\n            breakLabel='...'\n            pageRangeDisplayed={2}\n            marginPagesDisplayed={2}\n            activeClassName='active'\n            pageClassName='page-item'\n            breakClassName='page-item'\n            breakLinkClassName='page-link'\n            nextLinkClassName='page-link'\n            nextClassName='page-item next'\n            previousClassName='page-item prev'\n            previousLinkClassName='page-link'\n            pageLinkClassName='page-link'\n            breakClassName='page-item'\n            breakLinkClassName='page-link'\n            containerClassName='pagination react-paginate separated-pagination pagination-sm justify-content-end pr-1 mt-1'\n        />\n    )\n\n\n    const deleteDoc = (e, id) => {\n        e.preventDefault()\n        deleteUserDocument(id)\n    }\n\n    return (\n        <Fragment>\n            <Card>\n                <CardHeader className='flex-row  align-md-items-center align-items-end justify-content-end border-bottom'>\n                    <input\n                        type='file'\n                        id=\"attach-user-doc\"\n                        multiple={true}\n                        hidden\n                        onChange={onFileSelectChange} />\n                    {\n                        !documentLoading &&\n                        <Button\n                            className=\"ml-2 btn-icon\"\n                            onClick={() => getUserDocuments()}\n                        >\n                            <RefreshCcw\n                                size={15}\n                            />\n                        </Button>\n                    }\n\n                    <Button className='ml-2 btn-icon' color='primary' onClick={() => { document.getElementById(\"attach-user-doc\").click() }} >\n                        <Plus size={15} />\n                    </Button>\n                </CardHeader>\n                <Row className='justify-content-end mx-0'>\n                    <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\n                        <Label className='mr-1' for='search-input'>\n                            Search\n                        </Label>\n                        <Input\n                            className='dataTable-filter mb-50'\n                            type='text'\n                            bsSize='sm'\n                            id='search-input'\n                            value={searchValue}\n                            onChange={handleFilter}\n                        />\n                    </Col>\n                </Row>\n                <DataTable\n                    noHeader\n                    pagination\n                    selectableRows\n                    columns={columns}\n                    paginationPerPage={6}\n                    className='react-dataTable'\n                    sortIcon={<ChevronDown size={10} />}\n                    paginationDefaultPage={currentPage + 1}\n                    paginationComponent={CustomPagination}\n                    data={searchValue.length ? filteredData : data}\n                    selectableRowsComponent={BootstrapCheckbox}\n                />\n            </Card>\n        </Fragment>\n\n    )\n}\n\nexport default DataTableWithButtons\n","import React from 'react';\n// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\nimport Select from 'react-select'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n\n\n// ** Store & Actions\nimport { connect, useSelector } from 'react-redux'\nimport {\n    getUserDocuments,\n    getUserDocumentsSuccess,\n    getUserDocumentsFailure,\n    selectUserDocumentsType,\n    uploadUserDocument,\n    addUserDocumentToQueue,\n    cancelUserDocumentUpload,\n    updateUserDocumentProgress,\n    deleteUserDocument,\n    deleteUserDocumentFailure,\n    deleteUserDocumentSuccess,\n} from './store/actions'\n\nimport '@styles/base/pages/app-chat.scss'\nimport '@styles/base/pages/app-chat-list.scss'\nimport './style.scss'\n\nimport { withRouter } from 'react-router';\n\nimport DocumentTable from './table'\nimport { Row, Col, Progress, UncontrolledTooltip } from 'reactstrap';\nimport { Card, CardBody } from 'reactstrap';\n\n\n\nimport { File, Code, Image, Film, Archive, FileText, Music, Layers } from 'react-feather'\nimport { getShortNameForDocument } from '../../utility/Utils';\n\n\nimport UILoader from '../../@core/components/ui-loader';\n\n\nconst AppDocuments = (props) => {\n    // ** Store Vars\n    const store = useSelector(state => state.Documents)\n\n    // ** Get data on Mount\n\n\n\n    useEffect(() => {\n        props.getUserDocuments()\n    }, [])\n\n    const categoryTypes = [\n        {\n            label: \"All Files\",\n            value: null,\n            icon: <Layers size={16} />\n        },\n        {\n            label: \"Document\",\n            value: \"document\",\n            icon: <FileText size={16} />\n        },\n        {\n            label: \"Images\",\n            value: \"image\",\n            icon: <Image size={16} />\n        },\n        {\n            label: \"Videos\",\n            value: \"video\",\n            icon: <Film size={16} />\n        },\n        {\n            label: \"Audio\",\n            value: \"audio\",\n            icon: <Music size={16} />\n        },\n        {\n            label: \"Source Code\",\n            value: \"code\",\n            icon: <Code size={16} />\n        },\n        {\n            label: \"Archive Files\",\n            value: \"archive\",\n            icon: <Archive size={16} />\n        },\n        {\n            label: \"Other Files\",\n            value: \"file\",\n            icon: <File size={16} />\n        },\n    ]\n\n    return (\n        <Fragment>\n            <Card className=\"app-document-container\">\n                <CardBody>\n                    <UILoader blocking={props.documentLoading}>\n                        <Row>\n                            <Col lg=\"2\" md=\"3\" sm=\"12\" >\n                                <div className=\"mt-3\">\n                                    <h6 className=\"text-muted pl-1  mt-3 mb-2\">Category</h6>\n                                    <Select\n                                        className=\"file-category-select d-sm-block d-md-none d-lg-none d-xl-none\"\n                                        options={categoryTypes}\n                                        defaultValue={categoryTypes[0]}\n                                        value={categoryTypes.find(c => c.value == props.selectedType)}\n                                        onChange={e => props.selectUserDocumentsType(e.value)}\n                                    />\n                                    <ul className=\"list-documents d-none d-sm-none d-md-block d-lg-block d-xl-block\">\n                                        {\n                                            categoryTypes.map(c =>\n                                                <li key={\"doc_category_\" + c.label}\n                                                    className={props.selectedType == c.value ? \"active\" : \"\"}\n                                                    onClick={() => props.selectUserDocumentsType(c.value)}\n                                                >\n                                                    {\n                                                        c.icon\n                                                    }\n                                                    <span >\n                                                        {c.label}\n                                                    </span>\n                                                </li>)\n                                        }\n                                    </ul>\n                                </div>\n                            </Col>\n                            <Col lg=\"10\" md=\"9\" sm='12' >\n                                <DocumentTable store={props} />\n                            </Col>\n                            {\n                                props.documentUploads.length > 0 &&\n                                <div>\n                                    <div className=\"user-document-progress-container\">\n                                        {\n                                            props.documentUploads.map(d =>\n                                                <div className=\"file\" key={\"selectedFiles_\" + d.documentId}>\n                                                    <Progress\n                                                        value={d.progress}\n                                                        min={0}\n                                                        max={100}\n                                                        animated={true}\n                                                    />\n                                                    <div className=\"details\">\n                                                        <span id={`doc-name-${d.documentId}`} >\n                                                            {getShortNameForDocument(d.name)}\n                                                        </span>\n                                                        <UncontrolledTooltip placement='top' target={`doc-name-${d.documentId}`}>\n                                                            {d.name}\n                                                        </UncontrolledTooltip>\n                                                        <button onClick={() => props.cancelUserDocumentUpload({ documentId: d.documentId })}>\n                                                            <i className=\"la la-times\"></i>\n                                                        </button>\n                                                    </div>\n                                                </div>)\n                                        }\n                                    </div>\n                                </div>\n                            }\n                        </Row>\n                    </UILoader>\n                </CardBody>\n            </Card>\n        </Fragment >\n\n    )\n}\n\nconst mapStateToProps = (state) => {\n\n    const {\n        documents,\n        documentLoading,\n        documentsError,\n        selectedType,\n        documentUploads\n    } = state.Documents;\n    return {\n        documents,\n        documentLoading,\n        documentsError,\n        selectedType,\n        documentUploads\n    }\n}\n\nexport default withRouter(\n    connect(mapStateToProps, {\n        getUserDocuments,\n        getUserDocumentsSuccess,\n        getUserDocumentsFailure,\n        selectUserDocumentsType,\n        uploadUserDocument,\n        addUserDocumentToQueue,\n        cancelUserDocumentUpload,\n        updateUserDocumentProgress,\n        deleteUserDocument,\n        deleteUserDocumentFailure,\n        deleteUserDocumentSuccess,\n\n    })(AppDocuments)\n)\n"],"sourceRoot":""}