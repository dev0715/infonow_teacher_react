{"version":3,"sources":["pages/chat/socket/index.js","pages/chat/socket/eventTypes.js","pages/chat/socket/events.js","pages/chat/Chat.js","pages/chat/SidebarLeft.js","pages/chat/UserProfileSidebar.js","pages/chat/index.js","@core/components/avatar-group/index.js","pages/chat/sounds/notification.mp3"],"names":["io","transports","IOEvents","CONNECT","DISCONNECT","AUTHORIZATION","SET_LANGUAGE","NEW_MESSAGE","UPDATE_MESSAGE","ADD_PARTICIPANT","GET_PREVIOUS_MESSAGES","JOIN_ROOM","JOIN_GLOBAL_ROOM","GLOBAL_ROOM_NOTIFICATION","MESSAGES_DELIVERED","MESSAGES_SEEN","MESSAGES_DELETE","BLOCK_CHAT","UNBLOCK_CHAT","UpDateChatParticipants","event","res","props","console","log","success","updateChatParticipants","chatId","data","UpDateChatsAndSelectedChat","updateSelectChat","error","StoreNewMessage","playNotificationSound","saveNewMessage","getPreviousMessages","socket","timeStamp","arguments","length","undefined","moment","utc","emit","dateTime","sendMessage","_ref","message","messageId","documentId","ChatLog","store","handleUserSidebarRight","handleSidebar","userSidebarLeft","muteChatNotification","uploadDocument","unmuteChatNotification","mutedNotificationIds","selectedChat","newMessage","isEndOfMessages","documentList","cancelDocumentUpload","updateDocumentProgress","user","messages","messagesLoading","setPreviousMessagesLoading","chatArea","useRef","_useState","useState","_useState2","Object","slicedToArray","msg","setMsg","_useState3","_useState4","messageRefId","setMessageRefId","_useState5","_useState6","showScrollToBottom","setShowScrollToBottom","_useState7","_useState8","emojiSelectorShowing","setEmojiSelectorShowing","_useState9","_useState10","dropZoneVisible","setDropZoneVisible","_useState11","_useState12","query","setQuery","useEffect","scrollToBottom","animated","ReactDOM","findDOMNode","current","scrollTo","top","Number","MAX_SAFE_INTEGER","behavior","keys","topMsg","document","getElementById","scrollIntoView","scrollToPosition","handleSendMsg","e","preventDefault","content","v4","createdAt","ChatWrapper","PerfectScrollbar","uploadFile","file","callback","progress","_useDropzone","useDropzone","onDrop","files","count","forEach","getRootProps","getInputProps","isDragActive","react_default","a","createElement","className","classnames","d-none","message_square","assign","concat","onClick","stopPropagation","onDragLeave","captureDragLeave","file_text","width","height","onDragEnter","captureDragOver","menu","size","avatar","imgHeight","imgWidth","img","GET_IMAGE_URL","type","groupPicture","chatParticipants","find","u","userId","profilePicture","groupName","name","InputGroup","Input","placeholder","value","onChange","target","InputGroupAddon","addonType","InputGroupText","search","x","UncontrolledDropdown","DropdownToggle","color","more_vertical","DropdownMenu","right","DropdownItem","href","blockedAt","userBlockChat","userUnBlockChat","lastMessageTime","deleteMessages","dist_default","groupVisibility","onEmojiClick","selectedEmoji","emoji","disableAutoFocus","native","onScroll","_event$target","scrollHeight","scrollTop","clientHeight","time","handleScroll","ref","options","wheelPropagation","msgs","filter","m","toLowerCase","includes","Fragment","Spinner","map","item","index","key","chat-left","isSame","style","display","justifyContent","alignItems","calendar","format","visibility","id","split","link","window","open","GET_DOCUMENT_URL","getFileIcon","fileType","detectLinkInMessage","getFilePreview","renderChats","avatar_group","cp","seenAt","p","title","DOCUMENT_BASE_URL","Button","hidden","f","Card","CardBody","d","Progress","min","max","getShortNameForDocument","UncontrolledTooltip","placement","Form","onSubmit","Label","for","multiple","hasOwnProperty","send","SidebarLeft","sidebar","handleUserSidebarLeft","setNotificationEnabled","isNotificationEnabled","selectChat","chats","chatLoading","updateAbout","about","setAbout","status","setStatus","filteredChat","setFilteredChat","show","lib_default","rows","defaultValue","onBlur","saveAbout","text-danger","CustomInput","label","checked","bell","defaultChecked","val","filteredChatsArr","chat","toConsumableArray","ui_loader","blocking","formatDateToMonthShort","Date","handleUserClick","CardText","UserProfileSidebar","userSidebarRight","chatDocuments","chatDocumentsLoading","getSelectChatDocuments","c","Row","Col","lg","fileName","download","saveAs","notificationSound","require","withRouter","connect","state","_state$Chat","Chat","chatError","authError","isAuthorized","isRoomJoined","selectedUser","isNotification","uploadedDocuments","aboutUpdating","setLoggedUser","getChatContacts","authorizedSuccess","authorizedFailure","setRoomJoined","getPreviousMessagesSuccess","getPreviousMessagesFailure","updateChatHeadMessage","stopNotificationSound","setNotificationIds","addDocumentToQueue","removeDocument","getSelectChatDocumentsSuccess","getSelectChatDocumentsFailure","updateAboutSuccess","updateAboutFailure","useSelector","setUser","setSidebar","setUserSidebarRight","setUserSidebarLeft","getLoggedInUser","on","locale","authorization","authHeader","attachEvents","getChatNotificationIds","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","setTimeout","_step2","_iterator2","doc","react","chat_SidebarLeft","handleUser","obj","chat_UserProfileSidebar","src","autoPlay","AvatarGroup","tag","Tag","react__WEBPACK_IMPORTED_MODULE_1___default","_Users_efsolpc1_Projects_infonow_teacher_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","i","ItemTag","react__WEBPACK_IMPORTED_MODULE_1__","reactstrap__WEBPACK_IMPORTED_MODULE_3__","join","meta","_components_avatar__WEBPACK_IMPORTED_MODULE_4__","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/39.e4de4525.chunk.js","sourcesContent":["import io from 'socket.io-client';\nexport default io('http://192.168.10.104:3701', { transports: ['websocket', 'polling', 'flashsocket'] })","export const IOEvents = {\n    CONNECT: \"CONNECT\",\n    DISCONNECT: \"disconnect\",\n    AUTHORIZATION: \"AUTHORIZATION\",\n    SET_LANGUAGE: \"SET_LANGUAGE\",\n    NEW_MESSAGE: \"NEW_MESSAGE\",\n    UPDATE_MESSAGE: \"UPDATE_MESSAGE\",\n    ADD_PARTICIPANT: \"ADD_PARTICIPANT\",\n    GET_PREVIOUS_MESSAGES: \"GET_PREVIOUS_MESSAGES\",\n    JOIN_ROOM: \"JOIN_ROOM\",\n    JOIN_GLOBAL_ROOM: \"JOIN_GLOBAL_ROOM\",\n    GLOBAL_ROOM_NOTIFICATION: \"GLOBAL_ROOM_NOTIFICATION\",\n    MESSAGES_DELIVERED: \"MESSAGES_DELIVERED\",\n    MESSAGES_SEEN: \"MESSAGES_SEEN\",\n    MESSAGES_DELETE: \"MESSAGES_DELETE\",\n    BLOCK_CHAT: \"BLOCK_CHAT\",\n    UNBLOCK_CHAT: \"UNBLOCK_CHAT\"\n};","import moment from \"moment\";\nimport { IOEvents } from \"./eventTypes\";\nimport { getLoggedInUser } from '../../../helpers/backend-helpers'\nimport authHeader from \"../../../helpers/jwt-token-access/auth-token-header\";\n\n\n/**\n * \n * @param {string} event \n * @param {Object} res \n * @param {any} props \n */\nconst UpDateChatParticipants = (event, res, props) => {\n    console.log(event, res);\n    if (res.success) {\n        props.updateChatParticipants({ chatId: res.chatId, data: res.data })\n    }\n}\n\n/**\n * \n * @param {string} event \n * @param {Object} res \n * @param {any} props \n */\nconst UpDateChatsAndSelectedChat = (event, res, props) => {\n    console.log(event, res);\n    if (res.success) {\n        UpDateChatParticipants(event, res, props)\n        props.updateSelectChat(res.data)\n    } else {\n        console.log(event, res.error)\n    }\n}\n\n\n/**\n * \n * @param {string} event \n * @param {Object} res \n * @param {any} props \n */\nconst StoreNewMessage = (event, res, props) => {\n    console.log(event, res);\n    props.playNotificationSound(res)\n    props.saveNewMessage(res)\n}\n\n\n\n/**\n * \n * @param {any} socket \n * @param {any} props \n */\nexport function attachEvents(socket, props) {\n\n    socket.on(IOEvents.CONNECT, () => {\n        console.log(IOEvents.CONNECT);\n        socket.emit(IOEvents.SET_LANGUAGE, { locale: 'en' })\n        let authorization = authHeader()['Authorization']\n        socket.emit(IOEvents.AUTHORIZATION, { authorization })\n    })\n\n    socket.on(IOEvents.AUTHORIZATION, (res) => {\n        console.log(IOEvents.AUTHORIZATION, res);\n        if (res.success) {\n            let user = getLoggedInUser() || {}\n            props.getChatContacts(user.userId)\n            props.authorizedSuccess()\n        }\n        else {\n            props.authorizedFailure()\n        }\n    })\n\n    socket.on(IOEvents.JOIN_ROOM, (res) => {\n        console.log(IOEvents.JOIN_ROOM, res);\n    })\n\n    socket.on(IOEvents.GET_PREVIOUS_MESSAGES, (res) => {\n        console.log(IOEvents.GET_PREVIOUS_MESSAGES, res);\n        if (res.success) {\n            props.getPreviousMessagesSuccess(res.data)\n        }\n        else {\n            props.getPreviousMessagesFailure(res.error)\n        }\n    })\n\n    socket.on(IOEvents.NEW_MESSAGE, res => StoreNewMessage(IOEvents.NEW_MESSAGE, res, props))\n\n    socket.on(IOEvents.MESSAGES_DELIVERED, res => UpDateChatParticipants(IOEvents.MESSAGES_DELIVERED, res, props))\n    socket.on(IOEvents.MESSAGES_SEEN, res => UpDateChatParticipants(IOEvents.MESSAGES_SEEN, res, props))\n\n    socket.on(IOEvents.BLOCK_CHAT, res => UpDateChatsAndSelectedChat(IOEvents.BLOCK_CHAT, res, props))\n    socket.on(IOEvents.UNBLOCK_CHAT, res => UpDateChatsAndSelectedChat(IOEvents.UNBLOCK_CHAT, res, props))\n\n    socket.on(IOEvents.MESSAGES_DELETE, (res) => {\n        console.log(IOEvents.MESSAGES_DELETE, res);\n        if (res.success) {\n            props.deleteMessages(res.data)\n        }\n    })\n}\n\n/**\n * \n * @param {any} socket \n * @param {uuid} chatId \n * @param {Moment} timeStamp \n */\n\nexport function getPreviousMessages(socket, chatId, timeStamp = moment().utc()) {\n    socket.emit(IOEvents.GET_PREVIOUS_MESSAGES, { chatId: chatId, dateTime: timeStamp })\n}\n\n/**\n * \n * @param {any} socket \n * @param {uuid} chatId \n * @param {Moment} timeStamp \n */\n\nexport function sendMessage({ socket, chatId, message, messageId, documentId }) {\n    socket.emit(IOEvents.NEW_MESSAGE, { chatId, message: message, messageId, documentId })\n}\n\n/**\n * \n * @param {any} socket \n * @param {uuid} chatId \n */\n\nexport function deleteMessages(socket, chatId,) {\n    socket.emit(IOEvents.MESSAGES_DELETE, { chatId, lastMessageTime: moment().utc() })\n}\n\n/**\n * \n * @param {any} socket \n * @param {uuid} chatId \n */\n\nexport function userBlockChat(socket, chatId,) {\n    socket.emit(IOEvents.BLOCK_CHAT, { chatId })\n}\n\n/**\n * \n * @param {any} socket \n * @param {uuid} chatId \n */\n\nexport function userUnBlockChat(socket, chatId,) {\n    socket.emit(IOEvents.UNBLOCK_CHAT, { chatId })\n    console.log(\"Unblock\")\n}","import React from 'react';\n// ** React Imports\nimport { useState, useEffect, useRef } from 'react'\nimport ReactDOM from 'react-dom'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\nimport AvatarGroup from '@components/avatar-group'\nimport { getShortNameForDocument } from '@utils';\n\n// ** Store & Actions\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { MessageSquare, Menu, Search, MoreVertical, Send, Calendar, FileText, X, } from 'react-feather'\nimport {\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Form,\n  Label,\n  InputGroup,\n  InputGroupAddon,\n  Input,\n  InputGroupText,\n  Button,\n  Spinner,\n  Progress,\n  Tooltip,\n  UncontrolledTooltip,\n  Card,\n  CardBody\n} from 'reactstrap'\n\nimport moment from 'moment';\n\n\nimport { v4 } from \"uuid\"\nimport { sendMessage, getPreviousMessages, deleteMessages, userBlockChat, userUnBlockChat } from './socket/events';\n\nimport { GET_DOCUMENT_URL, GET_IMAGE_URL, DOCUMENT_BASE_URL } from './../../helpers/url_helper';\nimport { detectLinkInMessage, getFileIcon, getFilePreview } from './utility';\nimport Picker, { SKIN_TONE_NEUTRAL } from \"emoji-picker-react\";\n\nimport { useDropzone } from 'react-dropzone'\n\nconst ChatLog = props => {\n  // ** Props & Store\n  const {\n    store,\n    handleUserSidebarRight, handleSidebar,\n    userSidebarLeft, socket } = props\n\n  const { muteChatNotification, uploadDocument,\n    unmuteChatNotification, mutedNotificationIds,\n    selectedChat, newMessage,\n    isEndOfMessages, documentList, cancelDocumentUpload, updateDocumentProgress,\n    user, messages, messagesLoading, setPreviousMessagesLoading } = store\n\n  // ** Refs & Dispatch\n  const chatArea = useRef(null)\n\n\n\n  // ** State\n  const [msg, setMsg] = useState('')\n  const [messageRefId, setMessageRefId] = useState(null)\n  const [showScrollToBottom, setShowScrollToBottom] = useState(false)\n  const [emojiSelectorShowing, setEmojiSelectorShowing] = useState(false)\n  const [dropZoneVisible, setDropZoneVisible] = useState(false)\n  const [query, setQuery] = useState(\"\")\n\n  useEffect(() => {\n    setQuery(\"\")\n  }, [selectedChat])\n\n  // ** Scroll to chat bottom\n  const scrollToBottom = (animated = false) => {\n    const chatContainer = ReactDOM.findDOMNode(chatArea.current)\n    chatContainer.scrollTo({ top: Number.MAX_SAFE_INTEGER, behavior: animated ? 'smooth' : 'auto' });\n  }\n\n  const scrollToPosition = () => {\n    if (messageRefId) {\n      let topMsg = document.getElementById(messageRefId);\n      if (topMsg) topMsg.scrollIntoView();\n    }\n  }\n\n  useEffect(() => {\n    setMessageRefId(null)\n  }, [selectedChat])\n\n\n  // ** If user chat is not empty scrollToBottom\n  useEffect(() => {\n    const selectedUserLen = Object.keys(selectedChat).length\n    if (selectedUserLen > 0 && !messageRefId) scrollToBottom()\n    if (messageRefId) scrollToPosition()\n  }, [messages])\n\n\n  const handleScroll = event => {\n    const { scrollHeight, scrollTop, clientHeight, scrollToBottom } = event.target;\n    const bottom = scrollHeight - scrollTop - clientHeight\n\n    setShowScrollToBottom(bottom > 200)\n    if (scrollTop == 0 && messages.length > 15 && !isEndOfMessages) {\n      let time = messages[0] ? messages[0].createdAt : moment().utc()\n      messages[0] ? setMessageRefId(messages[0].messageId) : setMessageRefId(null)\n      if (selectedChat.chatId) {\n        setPreviousMessagesLoading()\n        getPreviousMessages(socket, selectedChat.chatId, time)\n      }\n    }\n  }\n\n\n  const openDocument = (link) => {\n    if (link)\n      window.open(GET_DOCUMENT_URL(link), '_blank')\n  }\n\n  const getFilterMessages = () => {\n    if (!query) return messages;\n    return messages.filter(m => m.content.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  // ** Renders user chat\n  const renderChats = () => {\n    let msgs = getFilterMessages();\n    return <>\n      {\n        messagesLoading &&\n        <div className=\"text-center\">\n          <Spinner size=\"lg\" color={'primary'} />\n        </div>\n      }\n      {msgs.map((item, index) =>\n        <div\n          key={index}\n          className={classnames('chat', {\n            'chat-left': item.user.userId !== user.userId,\n          })}\n        >\n          {\n            !(index > 0 && index < msgs.length && moment(msgs[index - 1].createdAt).isSame(item.createdAt, 'date')) &&\n            <div\n              className=\"text-center m-2\"\n              style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}\n            >\n              <Calendar size={16} />\n              &nbsp;&nbsp;\n              {\n                moment(item.createdAt).format(\"DD MMM YYYY\")\n              }\n            </div>\n          }\n\n          <div>\n            <div className='chat-avatar'>\n              <Avatar\n                className='box-shadow-1 cursor-pointer'\n                img={GET_IMAGE_URL(item.user.profilePicture)}\n                style={{\n                  visibility: index < msgs.length && index > 0 ?\n                    (item.user.userId == msgs[index - 1].user.userId\n                      && moment(msgs[index - 1].createdAt)\n                        .isSame(item.createdAt, 'minute') ? \"hidden\" : \"visible\"\n                    )\n                    : \"visible\"\n                }}\n              />\n            </div>\n            <div\n              className=\"chat-body\"\n            >\n              <div id={item.messageId} key={\"msg_\" + item.messageId} className={`chat-content ${item.document ? 'file' : ''}`}>\n                <p\n                  className=\"message-user-name\"\n                  style={{\n                    display: index < msgs.length && index > 0 ?\n                      (item.user.userId == msgs[index - 1].user.userId\n                        && moment(msgs[index - 1].createdAt)\n                          .isSame(item.createdAt, 'minute') ? \"none\" : \"block\"\n                      )\n                      : \"block\"\n                  }}\n                >\n                  {\n                    selectedChat.type == \"group\"\n                    && item.user.userId !== user.userId\n                    && (item.user.name || \"\").split(\" \")[0]\n                  }\n                </p>\n                <p\n                  onClick={() => openDocument(!!item.document ? item.document.name : null)}\n                  className={!!item.document ? \"cursor-pointer\" : ''}\n                >\n                  {\n                    !!item.document && <>{getFileIcon(item.document.fileType)}&nbsp;&nbsp;</>\n                  }\n                  {\n                    item.document ?\n                      <span className=\"font-weight-bold \">{item.content}</span>\n                      : detectLinkInMessage(item.content)\n                  }\n                </p>\n                {item.document &&\n                  getFilePreview(item.document.name, item.document.fileType)\n                }\n              </div>\n            </div>\n            {\n              index < msgs.length - 1 && index > -1 ?\n                <>\n                  {\n                    item.user.userId == msgs[index + 1].user.userId\n                      && moment(msgs[index + 1].createdAt).isSame(item.createdAt, 'minute') ?\n                      \"\"\n                      : <div className=\"msg-time\" > {moment(item.createdAt).format(\"hh:mm a\")}</div>\n                  }\n                </>\n                : <div className=\"msg-time\" > {moment(item.createdAt).format(\"hh:mm a\")}</div>\n            }\n          </div>\n        </div>\n      )\n      }</>\n\n  }\n\n  // ** Opens right sidebar & handles its data\n  const handleAvatarClick = obj => {\n    handleUserSidebarRight()\n  }\n\n  // ** On mobile screen open left sidebar on Start Conversation Click\n  const handleStartConversation = () => {\n    if (!Object.keys(selectedChat).length && !userSidebarLeft && window.innerWidth <= 1200) {\n      handleSidebar()\n    }\n  }\n\n  const onEmojiClick = (e, selectedEmoji) => {\n    setMsg(`${msg}${selectedEmoji.emoji}`);\n  }\n\n\n  const clearChat = (e) => {\n    e.preventDefault()\n    deleteMessages(socket, selectedChat.chatId)\n    setMessageRefId(null)\n  }\n\n  const blockChat = (e) => {\n    e.preventDefault()\n    userBlockChat(socket, selectedChat.chatId)\n  }\n\n  const unBlockChat = (e) => {\n\n    e.preventDefault()\n    userUnBlockChat(socket, selectedChat.chatId)\n  }\n\n  const muteNotification = (e) => {\n    e.preventDefault()\n    muteChatNotification(selectedChat.chatId)\n  }\n\n  const unmuteNotification = (e) => {\n    e.preventDefault()\n    unmuteChatNotification(selectedChat.chatId)\n  }\n\n\n\n  // ** Sends New Msg\n  const handleSendMsg = e => {\n    if (emojiSelectorShowing) setEmojiSelectorShowing(false);\n    e.preventDefault()\n    if (msg.length) {\n      let message = {\n        content: msg,\n        messageId: v4(),\n        createdAt: moment(),\n        user: user\n      }\n      setMessageRefId(message.messageId)\n      sendMessage({ socket, chatId: selectedChat.chatId, message: msg, messageId: message.messageId })\n      newMessage(message)\n      setMsg('')\n    }\n\n  }\n\n  // ** ChatWrapper tag based on chat's length\n  const ChatWrapper = Object.keys(selectedChat).length > 0 ? PerfectScrollbar : 'div'\n\n  const uploadFile = (file) => {\n    uploadDocument({\n      chatId: selectedChat.chatId,\n      file: file,\n      callback: ({ progress, documentId }) => updateDocumentProgress({ progress, documentId })\n    })\n  }\n\n  const onDrop = files => {\n    // Do something with the files\n    setDropZoneVisible(false)\n\n    let count = 0;\n    files.forEach(file => {\n      console.log(\"DROPZONE FILE\", file)\n      if (count < 5) uploadFile(file)\n      count++\n    });\n\n  }\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n  const onFileSelectChange = (e) => {\n    let count = 0;\n    for (let key in e.target.files) {\n      if (e.target.files.hasOwnProperty(key)) {\n        console.log(\"SELECTED FILE \", e.target.files[key])\n        uploadFile(e.target.files[key])\n        if (count == 5) {\n          break;\n        }\n        count++\n      }\n    }\n    document.getElementById('attach-doc').value = null;\n  }\n\n\n  const captureDragOver = (e) => {\n    console.log(\"DRAG\", e)\n    setDropZoneVisible(true)\n\n  }\n  const captureDragLeave = (e) => {\n    console.log(\"RELEASE\", e)\n    setDropZoneVisible(false)\n\n  }\n\n  return (\n    <div className='chat-app-window'>\n      <div className={classnames('start-chat-area', { 'd-none': Object.keys(selectedChat).length })}>\n        <div className='start-chat-icon mb-1'>\n          <MessageSquare />\n        </div>\n      </div>\n\n      <div className={\n        `bg-gradient-primary ${dropZoneVisible ? \"chat-dropzone visible\" : \"chat-dropzone\"}`\n      }\n\n        {...getRootProps({\n          onClick: event => event.stopPropagation()\n        })}\n        onDragLeave={e => captureDragLeave(e)}\n      >\n        <input {...getInputProps()} />\n        <FileText className=\"icon\" width={50} height={50} />\n      </div>\n      {Object.keys(selectedChat).length &&\n        <div\n          className={classnames('active-chat', { 'd-none': selectedChat === null })}\n          onDragEnter={e => captureDragOver(e)}\n        >\n          <div className='chat-navbar'>\n            <header className='chat-header'>\n              <div className='d-flex align-items-center'>\n                <div className='sidebar-toggle d-block d-lg-none mr-1' onClick={handleSidebar}>\n                  <Menu size={21} />\n                </div>\n                <Avatar\n                  imgHeight='36'\n                  imgWidth='36'\n                  img={GET_IMAGE_URL(selectedChat.type == 'group'\n                    ? selectedChat.groupPicture || null\n                    : selectedChat.chatParticipants.find(u => u.user.userId != user.userId).user.profilePicture)\n                  }\n                  className='avatar-border user-profile-toggle m-0 mr-1'\n                  onClick={handleUserSidebarRight}\n                />\n                <h6 className='mb-0' onClick={handleUserSidebarRight}>\n                  {\n                    selectedChat.type == 'group'\n                      ? selectedChat.groupName\n                      : selectedChat.chatParticipants.find(u => u.user.userId != user.userId).user.name\n                  }\n                </h6>\n              </div>\n              <div className='d-flex align-items-center'>\n                {/* <PhoneCall size={18} className='cursor-pointer d-sm-block d-none mr-1' />\n                <Video size={18} className='cursor-pointer d-sm-block d-none mr-1' /> */}\n                <div className=\"d-none d-md-block\">\n                  <InputGroup className='input-group-merge '>\n                    <Input placeholder='Search here'\n                      value={query} onChange={e => setQuery(e.target.value)}\n                    />\n                    <InputGroupAddon addonType='append'>\n                      <InputGroupText>\n                        {\n                          !query &&\n                          <Search size={14} />\n                        }\n                        {\n                          query &&\n                          <X size={14} onClick={() => setQuery(\"\")} />\n                        }\n                      </InputGroupText>\n                    </InputGroupAddon>\n                  </InputGroup>\n                </div>\n                <UncontrolledDropdown>\n                  <DropdownToggle className='btn-icon' color='transparent' size='sm'>\n                    <MoreVertical size='18' />\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem href='/' onClick={e => {\n                      e.preventDefault()\n                      handleUserSidebarRight()\n                    }}>\n                      View Contact\n                    </DropdownItem>\n                    {\n                      mutedNotificationIds && !mutedNotificationIds[selectedChat.chatId]\n                      &&\n                      <DropdownItem href='/' onClick={muteNotification}>\n                        Mute Notifications\n                      </DropdownItem>\n                    }\n                    {\n                      mutedNotificationIds && mutedNotificationIds[selectedChat.chatId]\n                      &&\n                      <DropdownItem href='/' onClick={unmuteNotification}>\n                        Unmute Notifications\n                      </DropdownItem>\n                    }\n                    {\n                      selectedChat.chatParticipants.find(u => u.user.userId == user.userId && !u.blockedAt) &&\n                      <DropdownItem href='/' onClick={blockChat}>\n                        Block Chat\n                      </DropdownItem>\n                    }\n                    {\n                      selectedChat.chatParticipants.find(u => u.user.userId == user.userId && u.blockedAt) &&\n                      <DropdownItem href='/' onClick={unBlockChat}>\n                        Unblock Chat\n                      </DropdownItem>\n                    }\n                    <DropdownItem href='/' onClick={clearChat}>\n                      Clear Chat\n                    </DropdownItem>\n                    <DropdownItem href='/' onClick={e => e.preventDefault()}>\n                      Report\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </div>\n            </header>\n          </div>\n\n          {\n            emojiSelectorShowing &&\n            <div className=\"emoji-picker-custom d-none d-md-block\">\n              <Picker\n                groupVisibility={false}\n                onEmojiClick={onEmojiClick}\n                disableAutoFocus={false}\n                native\n              />\n            </div>\n\n          }\n\n          <ChatWrapper onScroll={e => handleScroll(e)} ref={chatArea} className='user-chats' options={{ wheelPropagation: false }}>\n            {\n              Object.keys(selectedChat).length > 0 &&\n              <div className='chats'>\n                {renderChats()}\n              </div>\n\n            }\n\n            {\n              messages.length > 0 && messages[messages.length - 1].user.userId === user.userId &&\n              <div className=\"text-right p-1 msg-delivery-status-container\">\n                <AvatarGroup\n                  data={\n                    selectedChat.chatParticipants\n                      .filter(cp => cp.seenAt != null && cp.user.userId != user.userId)\n                      .map(p => ({\n                        title: p.user.name,\n                        img: DOCUMENT_BASE_URL + p.user.profilePicture || `${DOCUMENT_BASE_URL}profile-pictures/default.png`,\n                        imgWidth: '16',\n                        imgHeight: '16',\n                        className: 'msg-delivery-status'\n                      }))\n                  } />\n              </div>\n            }\n          </ChatWrapper>\n\n          <Button\n            onClick={() => scrollToBottom(true)}\n            color=\"gradient-primary\"\n            hidden={!showScrollToBottom}\n            className=\"btn-icon round btn-sm btn-scroll-top-chat\">\n            <i className=\"la la-arrow-down\" />\n          </Button>\n\n          {\n            documentList.filter(f => f.chatId == selectedChat.chatId).length > 0 &&\n            < div className=\"chat-selected-files-container\">\n              <Card className=\"ml-1\">\n                <CardBody className=\"p-1\">\n                  <div className=\"chat-selected-files-area\">\n                    {\n                      documentList.filter(f => f.chatId == selectedChat.chatId).map((d, index) =>\n                        <div className=\"selected-file\" key={\"selectedFiles_\" + d.documentId}>\n                          <Progress\n                            value={d.progress}\n                            min={0}\n                            max={100}\n                            animated={true}\n                          />\n                          <div>\n                            <span className=\"mr-1\" id={`doc-name-${d.documentId}`} >\n                              {getShortNameForDocument(d.name)}\n                            </span>\n                            <UncontrolledTooltip placement='top' target={`doc-name-${d.documentId}`}>\n                              {d.name}\n                            </UncontrolledTooltip>\n                            <button onClick={() => cancelDocumentUpload({ documentId: d.documentId })}>\n                              <i className=\"la la-times\"></i>\n                            </button>\n                          </div>\n                        </div>)\n                    }\n                  </div>\n                </CardBody>\n              </Card>\n            </div>\n          }\n\n          {\n            selectedChat.chatParticipants.find(u => u.user.userId == user.userId && !u.blockedAt)\n              ?\n              <Form className='chat-app-form' onSubmit={e => handleSendMsg(e)}>\n                <InputGroup className='input-group-merge mr-1 form-send-message'>\n                  <Input\n                    value={msg}\n                    onChange={e => setMsg(e.target.value)}\n                    placeholder='Type your message...'\n                  />\n                  <InputGroupAddon addonType='append'>\n                    <InputGroupText>\n                      <Label className='attachment-icon mb-0' for='attach-doc'>\n                        <i className='cursor-pointer text-secondary la la-paperclip chat-file' />\n                        <input type='file' id='attach-doc' multiple={true} hidden onChange={onFileSelectChange} />\n                      </Label>\n                    </InputGroupText>\n                    <InputGroupText className=\"pl-0 d-none d-md-block\" onClick={() => setEmojiSelectorShowing(emojiSelectorShowing => !emojiSelectorShowing)}>\n                      <Label className='emoji-icon mb-0'>\n                        <i className='cursor-pointer text-secondary la la-grin-alt chat-file' />\n                      </Label>\n                    </InputGroupText>\n                  </InputGroupAddon>\n                </InputGroup>\n                <Button\n                  className='send'\n                  color='primary'\n                  onClick={handleSendMsg}\n                >\n                  <Send size={14} className='d-lg-none' />\n                  <span className='d-none d-lg-block'>Send</span>\n                </Button>\n              </Form>\n              :\n              <div className=\"text-center pt-1\">\n                You can not reply to this conversation\n              </div>\n          }\n        </div>\n      }\n\n    </div >\n  )\n}\n\nexport default ChatLog\n","import React from 'react';\n// ** React Imports\nimport { useState } from 'react'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Utils\nimport { formatDateToMonthShort } from '@utils'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { X, Search, Bell } from 'react-feather'\nimport {\n  CardText, InputGroup, InputGroupAddon,\n  Input, InputGroupText, CustomInput\n} from 'reactstrap'\n\n\nimport UILoader from '../../@core/components/ui-loader';\n\nimport { GET_IMAGE_URL } from './../../helpers/url_helper';\n\nimport { getPreviousMessages } from './socket/events'\nconst SidebarLeft = props => {\n  // ** Props & Store\n  const { sidebar, handleUserSidebarLeft, handleSidebar, userSidebarLeft, socket, store } = props\n\n  const {\n    setNotificationEnabled,\n    isNotificationEnabled, selectChat, selectedChat,\n    user, chats, chatLoading, updateAbout\n  } = store\n\n  // ** State\n  const [about, setAbout] = useState('')\n  const [query, setQuery] = useState('')\n  const [active, setActive] = useState({})\n  const [status, setStatus] = useState('online')\n  const [filteredChat, setFilteredChat] = useState([])\n\n  // ** Handles User Chat Click\n  const handleUserClick = (chat, socket) => {\n    selectChat(chat)\n    getPreviousMessages(socket, chat.chatId)\n  }\n\n  // ** Renders Chat\n  const renderChats = () => {\n\n    if (chats && chats.length) {\n      if (query.length && !filteredChat.length) {\n        return (\n          <li className='no-results show'>\n            <h6 className='mb-0'>No Chats Found</h6>\n          </li>\n        )\n      } else {\n        const arrToMap = query.length && filteredChat.length ? filteredChat : chats\n\n        return arrToMap.map(item => {\n          const time = formatDateToMonthShort(item.messages.length > 0 ? item.messages[0].createdAt : new Date())\n\n          return (\n            <li\n              className={item.chatId == selectedChat.chatId ? \"active\" : \"\"}\n              key={item.chatId}\n              onClick={() => handleUserClick(item, socket)}\n            >\n              <Avatar\n                img={GET_IMAGE_URL(item.type == 'group'\n                  ? item.groupPicture || null\n                  : item.chatParticipants.find(u => u.user.userId != user.userId).user.profilePicture)\n                }\n                imgHeight='42' imgWidth='42' status={item.status} />\n              <div className='chat-info flex-grow-1'>\n                <h5 className='mb-0'>\n                  {item.type == 'group'\n                    ? item.groupName\n                    : item.chatParticipants.find(u => u.user.userId != user.userId).user.name}\n                </h5>\n                <CardText className='text-truncate'>\n                  {item.messages.length > 0 ? item.messages[0].content : ''}\n                </CardText>\n              </div>\n              <div className='chat-meta text-nowrap'>\n                <small className='float-right mb-25 chat-time ml-25'>{time}</small>\n                {/* {item.chat.unseenMsgs >= 1 ? (\n                  <Badge className='float-right' color='danger' pill>\n                    {item.chat.unseenMsgs}\n                  </Badge>\n                ) : null} */}\n              </div>\n            </li>\n          )\n        })\n      }\n    } else {\n      return null\n    }\n  }\n\n  // ** Handles Filter\n  const handleFilter = e => {\n    setQuery(e.target.value)\n    let val = e.target.value || \"\";\n    const searchFilterFunction = chat => chat.chatParticipants.find(p => p.user.name.toLowerCase().includes(val.toLowerCase())) ||\n      (chat.groupName || \"\").toLowerCase().includes(val.toLowerCase())\n\n    const filteredChatsArr = chats.filter(searchFilterFunction)\n    setFilteredChat([...filteredChatsArr])\n  }\n\n  const onNotificationChange = (e) => {\n    console.log(e.target.checked)\n    setNotificationEnabled(e.target.checked)\n  }\n\n  const saveAbout = (e) => {\n    e.preventDefault()\n    console.log(\"ABOUT___\", e.target.value)\n    updateAbout({ about: e.target.value })\n  }\n\n\n  return (\n    <div className='sidebar-left'>\n      <div className='sidebar'>\n        <div\n          className={classnames('chat-profile-sidebar', {\n            show: userSidebarLeft\n          })}\n        >\n          <header className='chat-profile-header'>\n            <div className='close-icon' onClick={handleUserSidebarLeft}>\n              <X size={14} />\n            </div>\n            <div className='header-profile-sidebar'>\n              <Avatar className='box-shadow-1 avatar-border'\n                img={GET_IMAGE_URL(user.profilePicture)}\n                status={status}\n                size='xl' />\n              <h4 className='chat-user-name'>{user.name}</h4>\n              {/* <span className='user-post'>{user.role}</span> */}\n            </div>\n          </header>\n          <PerfectScrollbar className='profile-sidebar-area' options={{ wheelPropagation: false }}>\n            <h6 className='section-label mb-1'>About</h6>\n            <div className='about-user'>\n              <Input\n                rows='5'\n                defaultValue={user.about}\n                type='textarea'\n                onBlur={e => saveAbout(e)}\n                onChange={e => setAbout(e.target.value)}\n                className={classnames('char-textarea', {\n                  'text-danger': about && about.length > 120\n                })}\n              />\n              <small className='counter-value float-right'>\n                <span className='char-count'>{user.about ? user.about.length : 0}</span>/ 120\n              </small>\n            </div>\n            <h6 className='section-label mb-1 mt-3'>Status</h6>\n            <ul className='list-unstyled user-status'>\n              <li className='pb-1'>\n                <CustomInput\n                  type='radio'\n                  className='custom-control-primary'\n                  id='online'\n                  label='Online'\n                  onChange={e => setStatus('online')}\n                  checked={status === 'online'}\n                />\n              </li>\n              <li className='pb-1'>\n                <CustomInput\n                  type='radio'\n                  className='custom-control-danger'\n                  id='busy'\n                  label='Do Not Disturb'\n                  onChange={e => setStatus('busy')}\n                  checked={status === 'busy'}\n                />\n              </li>\n              <li className='pb-1'>\n                <CustomInput\n                  type='radio'\n                  className='custom-control-warning'\n                  id='away'\n                  label='Away'\n                  onChange={e => setStatus('away')}\n                  checked={status === 'away'}\n                />\n              </li>\n              <li className='pb-1'>\n                <CustomInput\n                  type='radio'\n                  className='custom-control-secondary'\n                  id='offline'\n                  label='Offline'\n                  onChange={e => setStatus('offline')}\n                  checked={status === 'offline'}\n                />\n              </li>\n            </ul>\n            <h6 className='section-label mb-1 mt-2'>Settings</h6>\n            <ul className='list-unstyled'>\n              <li className='d-flex justify-content-between align-items-center mb-1'>\n                <div className='d-flex align-items-center'>\n                  <Bell className='mr-75' size='18' />\n                  <span className='align-middle'>Notification</span>\n                </div>\n                <CustomInput\n                  type='switch'\n                  defaultChecked={isNotificationEnabled}\n                  id='notifications'\n                  name='notifications'\n                  label=''\n                  onChange={onNotificationChange} />\n              </li>\n            </ul>\n          </PerfectScrollbar>\n        </div>\n        <div\n          className={classnames('sidebar-content', {\n            show: sidebar === true\n          })}\n        >\n          <div className='sidebar-close-icon' onClick={handleSidebar}>\n            <X size={14} />\n          </div>\n          <div className='chat-fixed-search'>\n            <div className='d-flex align-items-center w-100'>\n              <div className='sidebar-profile-toggle' onClick={handleUserSidebarLeft}>\n                {Object.keys(user).length ? (\n                  <Avatar\n                    className='avatar-border'\n                    img={GET_IMAGE_URL(user.profilePicture || null)}\n                    status={status}\n                    imgHeight='42'\n                    imgWidth='42'\n                  />\n                ) : null}\n              </div>\n              <InputGroup className='input-group-merge ml-1 w-100'>\n                <InputGroupAddon addonType='prepend'>\n                  <InputGroupText className='round'>\n                    <Search className='text-muted' size={14} />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  value={query}\n                  className='round'\n                  placeholder='Search or start a new chat'\n                  onChange={handleFilter}\n                />\n              </InputGroup>\n            </div>\n          </div>\n          <PerfectScrollbar className='chat-user-list-wrapper list-group' options={{ wheelPropagation: false }}>\n            <h4 className='chat-list-title'>Chats</h4>\n            <ul className='chat-users-list chat-list media-list'>\n              <UILoader blocking={chatLoading}>\n                {renderChats()}\n              </UILoader>\n            </ul>\n          </PerfectScrollbar>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SidebarLeft\n","import React, { useEffect } from 'react';\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\nimport {\n  UncontrolledTooltip,\n  Row, Col\n} from 'reactstrap'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { Download, X } from 'react-feather'\nimport { GET_DOCUMENT_URL, GET_IMAGE_URL } from '../../helpers/url_helper';\n\n\nimport { getShortNameForDocument } from '@utils';\nimport { getFileIcon } from './utility';\nimport UILoader from '../../@core/components/ui-loader';\n\nimport { saveAs } from 'file-saver';\n\nconst UserProfileSidebar = props => {\n  // ** Props\n  const { handleUserSidebarRight, userSidebarRight, store } = props\n\n  const { user, selectedChat, chatDocuments, chatDocumentsLoading, getSelectChatDocuments } = store\n\n  useEffect(() => {\n    if (userSidebarRight && selectedChat.chatId)\n      getSelectChatDocuments({ chatId: selectedChat.chatId })\n  }, [userSidebarRight])\n\n  const openDocument = (link) => {\n    if (link)\n      window.open(GET_DOCUMENT_URL(link), '_blank')\n  }\n\n  return (\n    Object.keys(selectedChat).length > 0\n    &&\n\n    < div className={classnames('user-profile-sidebar', {\n      show: userSidebarRight === true\n    })}>\n      <header className='user-profile-header'>\n        <span className='close-icon' onClick={handleUserSidebarRight}>\n          <X size={14} />\n        </span>\n        <div className='header-profile-sidebar'>\n          <Avatar\n            className='box-shadow-1 avatar-border'\n            size='xl'\n            // status={user.status}\n            img={GET_IMAGE_URL(selectedChat.type == 'group'\n              ? selectedChat.groupPicture || null\n              : selectedChat.chatParticipants.find(u => u.user.userId != user.userId).user.profilePicture)\n            }\n            imgHeight='70'\n            imgWidth='70'\n          />\n          <h4 className='chat-user-name'> {\n            selectedChat.type == 'group'\n              ? selectedChat.groupName\n              : selectedChat.chatParticipants.find(u => u.user.userId != user.userId).user.name\n          }\n          </h4>\n          {/* <span className='user-post'>{user.role}</span> */}\n        </div>\n      </header>\n      <PerfectScrollbar className='user-profile-sidebar-area' options={{ wheelPropagation: false }}>\n        {\n          selectedChat.type != \"group\" &&\n          <>\n            <h6 className='section-label mb-1'>About</h6>\n            <p>\n              {\n                selectedChat.chatParticipants.find(cp => cp.user.userId != user.userId)\n                  .user.about || \"These aren’t the droids you’re looking for!\"\n              }\n            </p>\n          </>\n        }\n        <div className='personal-info'>\n          {\n            selectedChat.type == \"group\" &&\n            <>\n              <h6 className='section-label mb-1 mt-3'>Group Information</h6>\n              <ul className='list-unstyled'>\n                {\n                  selectedChat.chatParticipants.filter(cp => cp.user.userId != user.userId).map(c =>\n                    <li className='mb-1' key={c.user.userId}>\n                      <div>\n                        <Avatar\n                          img={GET_IMAGE_URL(c.user.profilePicture)}\n                        />\n                        <span className=\"pl-1\">\n                          {\n                            c.user.name\n                          }\n                        </span>\n                      </div>\n                    </li>\n                  )\n                }\n              </ul>\n            </>\n          }\n        </div>\n        <div className='more-options'>\n          <h6 className='section-label mb-1 mt-3'>Shared Media</h6>\n          <UILoader blocking={!!chatDocumentsLoading}>\n            <ul className='list-unstyled'>\n              {\n                chatDocuments.length == 0 && !chatDocumentsLoading &&\n                <li className='cursor-pointer mb-1'>\n                  No Media found\n                </li>\n              }\n              {\n                chatDocuments.length > 0 &&\n                chatDocuments.map((d, index) =>\n                  <li\n                    key={\"doc_list_\" + index}\n                    className='cursor-pointer mb-1'\n                  >\n                    <Row className=\"shared-media-item\">\n                      <Col lg='1'>\n                        {\n                          getFileIcon(d.fileType)\n                        }\n                      </Col>\n                      <Col lg='9'>\n                        <span id={`chat-media-${d.documentId}`} className=\"ml-1\">\n                          {\n                            getShortNameForDocument(d.fileName)\n                          }\n                        </span>\n                        <UncontrolledTooltip placement='top' target={`chat-media-${d.documentId}`}>\n                          {d.fileName}\n                        </UncontrolledTooltip>\n                      </Col>\n                      <Col lg='1' className=\"download-btn\">\n                        <Download\n                          size={16}\n                          onClick={() => saveAs(GET_DOCUMENT_URL(d.name), d.fileName)}\n                        />\n                      </Col>\n                    </Row>\n                  </li>)\n              }\n            </ul>\n          </UILoader>\n        </div>\n      </PerfectScrollbar>\n    </div >\n\n  )\n}\n\nexport default UserProfileSidebar\n","import React from 'react';\n// ** React Imports\nimport { Fragment, useState, useEffect } from 'react'\n\n// ** Socket Imports\nimport socket from './socket'\n\n// ** Chat App Component Imports\nimport Chat from './Chat'\nimport Sidebar from './SidebarLeft'\nimport UserProfileSidebar from './UserProfileSidebar'\n\nimport './style.scss';\n// ** Third Party Components\nimport classnames from 'classnames'\n\n\n\n// ** Store & Actions\nimport { connect, useSelector } from 'react-redux'\nimport {\n  setLoggedUser,\n  getChatContacts, authorizedSuccess, authorizedFailure,\n  setRoomJoined, selectChat, updateSelectChat,\n  getPreviousMessagesSuccess, getPreviousMessagesFailure,\n  newMessage, saveNewMessage, deleteMessages,\n  updateChatHeadMessage, updateChatParticipants,\n  playNotificationSound, stopNotificationSound, setNotificationEnabled,\n  setNotificationIds, muteChatNotification, unmuteChatNotification,\n  uploadDocument,\n  addDocumentToQueue,\n  cancelDocumentUpload,\n  updateDocumentProgress,\n  removeDocument,\n  getSelectChatDocuments,\n  getSelectChatDocumentsSuccess,\n  getSelectChatDocumentsFailure,\n  updateAbout,\n  updateAboutSuccess,\n  updateAboutFailure,\n  setPreviousMessagesLoading\n\n} from './store/actions'\n\nimport '@styles/base/pages/app-chat.scss'\nimport '@styles/base/pages/app-chat-list.scss'\nimport { withRouter } from 'react-router';\nimport { IOEvents } from './socket/eventTypes.js';\nimport { attachEvents, sendMessage } from './socket/events';\nimport { getLoggedInUser } from './../../helpers/backend-helpers';\nimport { getChatNotificationIds } from './utility';\n\nconst notificationSound = require(\"./sounds/notification.mp3\")\n\nconst AppChat = (props) => {\n  // ** Store Vars\n  const store = useSelector(state => state.Chat)\n\n  // ** States\n  const [user, setUser] = useState({})\n  const [sidebar, setSidebar] = useState(false)\n  const [userSidebarRight, setUserSidebarRight] = useState(false)\n  const [userSidebarLeft, setUserSidebarLeft] = useState(false)\n\n  // ** Sidebar & overlay toggle functions\n  const handleSidebar = () => setSidebar(!sidebar)\n  const handleUserSidebarLeft = () => setUserSidebarLeft(!userSidebarLeft)\n  const handleUserSidebarRight = () => setUserSidebarRight(!userSidebarRight)\n  const handleOverlayClick = () => {\n    setSidebar(false)\n    setUserSidebarRight(false)\n    setUserSidebarLeft(false)\n  }\n\n  // ** Set user function for Right Sidebar\n  const handleUser = obj => setUser(obj)\n\n  // ** Get data on Mount\n\n\n\n  useEffect(() => {\n    props.setLoggedUser(getLoggedInUser() || {})\n    attachEvents(socket, props)\n    props.setNotificationIds(getChatNotificationIds())\n  }, [])\n\n  useEffect(() => {\n    if (!props.isRoomJoined) {\n      for (var chat of props.chats) {\n        socket.emit(IOEvents.JOIN_ROOM, { chatId: chat.chatId })\n      }\n      props.setRoomJoined()\n    }\n  }, [props.chats])\n\n\n  useEffect(() => {\n    if (props.isNotification) {\n      setTimeout(() => {\n        props.stopNotificationSound()\n      }, 1000);\n    }\n  }, [props.isNotification])\n\n\n  useEffect(() => {\n    for (const doc of props.uploadedDocuments) {\n      if (doc.data) {\n        props.removeDocument({ documentId: doc.documentId })\n        sendMessage({\n          socket,\n          message: doc.name,\n          chatId: doc.chatId,\n          documentId: doc.data.documentId\n        })\n      }\n    }\n  }, [props.uploadedDocuments])\n\n\n  return (\n    <Fragment>\n      <Sidebar\n        socket={socket}\n        store={props}\n        sidebar={sidebar}\n        handleSidebar={handleSidebar}\n        userSidebarLeft={userSidebarLeft}\n        handleUserSidebarLeft={handleUserSidebarLeft}\n      />\n      <div className='content-right'>\n        <div className='content-wrapper'>\n          <div className='content-body'>\n            <div\n              className={classnames('body-content-overlay', {\n                show: userSidebarRight === true || sidebar === true || userSidebarLeft === true\n              })}\n              onClick={handleOverlayClick}\n            ></div>\n            <Chat\n              socket={socket}\n              store={props}\n              handleUser={handleUser}\n              handleSidebar={handleSidebar}\n              userSidebarLeft={userSidebarLeft}\n              handleUserSidebarRight={handleUserSidebarRight}\n            />\n            <UserProfileSidebar\n              store={props}\n              userSidebarRight={userSidebarRight}\n              handleUserSidebarRight={handleUserSidebarRight}\n            />\n          </div>\n        </div>\n      </div>\n      {\n        props.isNotification &&\n        <audio\n          src={notificationSound}\n          autoPlay\n          style={{\n            visibility: 'hidden'\n          }}\n        />\n      }\n    </Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => {\n\n  const {\n    error,\n    user,\n    chats,\n    chatError,\n    authError,\n    isAuthorized,\n    isRoomJoined,\n    selectedChat,\n    selectedUser,\n    messages,\n    isNotification,\n    isEndOfMessages,\n    mutedNotificationIds,\n    isNotificationEnabled,\n    documentList,\n    uploadedDocuments,\n    chatDocuments,\n    chatDocumentsLoading,\n    chatLoading,\n    aboutUpdating,\n    messagesLoading\n\n  } = state.Chat;\n  return {\n    error,\n    user,\n    chats,\n    chatError,\n    authError,\n    isAuthorized,\n    isRoomJoined,\n    selectedChat,\n    selectedUser,\n    messages,\n    isNotification,\n    isEndOfMessages,\n    mutedNotificationIds,\n    isNotificationEnabled,\n    documentList,\n    uploadedDocuments,\n    chatDocuments,\n    chatDocumentsLoading,\n    chatLoading,\n    aboutUpdating,\n    messagesLoading\n  }\n}\n\nexport default withRouter(\n  connect(mapStateToProps, {\n    setLoggedUser,\n    getChatContacts, authorizedSuccess, authorizedFailure, saveNewMessage,\n    setRoomJoined, selectChat, updateSelectChat,\n    getPreviousMessagesSuccess, getPreviousMessagesFailure,\n    newMessage,\n    updateChatHeadMessage, updateChatParticipants,\n    deleteMessages,\n    playNotificationSound, stopNotificationSound, setNotificationEnabled,\n    setNotificationIds, muteChatNotification, unmuteChatNotification,\n    uploadDocument,\n    addDocumentToQueue,\n    cancelDocumentUpload,\n    updateDocumentProgress,\n    removeDocument,\n    getSelectChatDocuments,\n    getSelectChatDocumentsSuccess,\n    getSelectChatDocumentsFailure,\n    updateAbout,\n    updateAboutSuccess,\n    updateAboutFailure,\n    setPreviousMessagesLoading\n  })(AppChat)\n)\n","import React from 'react';\n// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport { UncontrolledTooltip } from 'reactstrap'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\nconst AvatarGroup = props => {\n  // ** Props\n  const { data, tag, className } = props\n\n  // ** Conditional Tag\n  const Tag = tag ? tag : 'div'\n\n  // ** Render Data\n  const renderData = () => {\n    return data.map((item, i) => {\n      const ItemTag = item.tag ? item.tag : 'div'\n      return (\n        <Fragment key={i}>\n          {item.title ? (\n            <UncontrolledTooltip placement={item.placement} target={item.title.split(' ').join('-')}>\n              {item.title}\n            </UncontrolledTooltip>\n          ) : null}\n          {!item.meta ? (\n            <Avatar\n              tag={ItemTag}\n              className={classnames('pull-up', {\n                [item.className]: item.className\n              })}\n              {...(item.title ? { id: item.title.split(' ').join('-') } : {})}\n              title={undefined}\n              meta={undefined}\n              {...item}\n            />\n          ) : null}\n          {item.meta ? <ItemTag className='d-flex align-items-center pl-1'>{item.meta}</ItemTag> : null}\n        </Fragment>\n      )\n    })\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar-group', {\n        [className]: className\n      })}\n    >\n      {renderData()}\n    </Tag>\n  )\n}\n\nexport default AvatarGroup\n\n// ** PropTypes\nAvatarGroup.propTypes = {\n  data: Proptypes.array.isRequired,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\n}\n","module.exports = __webpack_public_path__ + \"static/media/notification.4355078f.mp3\";"],"sourceRoot":""}